{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,I,E,I,A,G,E,E,W,C,E,a,C,C,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,GCVA,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,4R,I,E,C,EIA5F,EAAiB,IAAA,IAAoB,qCAAA,YAAA,GAAA,EAAsC,QAAQ,G,I,E,C,ECAnF,EAAiB,IAAA,IAAoB,sCAAA,YAAA,GAAA,EAAuC,QAAQ,G,I,E,C,ECApF,EAAiB,IAAA,IAAoB,wCAAA,YAAA,GAAA,EAAyC,QAAQ,G,I,E,C,ECAtF,EAAiB,IAAA,IAAoB,qCAAA,YAAA,GAAA,EAAsC,QAAQ,EJKnF,OAAM,EACJ,aAAc,CACZ,IAAI,CAAC,QAAQ,CAAG,IAAI,AACtB,CAMA,OAAO,aAAc,CAInB,OAHK,EAAgB,QAAQ,EAC3B,CAAA,EAAgB,QAAQ,CAAG,IAAI,CADjC,EAGO,EAAgB,QAAQ,AACjC,CAYA,OAAO,kBAAkB,CAAA,GAAE,CAAE,CAAA,KAAE,CAAI,CAAA,SAAE,CAAQ,CAAA,MAAE,CAAK,CAAA,SAAE,CAAQ,CAAE,CAAE,CAChE,MAAO,CAAC;0CAC8B,EAAE,EAAG;kEACmB,EAAE,EAAA,GAAU,MAAM,EAAE,EAAG;;;qBAGpE,EAAE,EAAS;qBACX,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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-bfe342201b9e1f81.js","src/scripts/index.js","src/scripts/events/home.js","src/scripts/template/product.js","node_modules/@parcel/runtime-js/lib/runtime-982d35ebba1f220c.js","node_modules/@parcel/runtime-js/lib/runtime-0cf7883959ad6511.js","node_modules/@parcel/runtime-js/lib/runtime-afddd4d26de47533.js","node_modules/@parcel/runtime-js/lib/runtime-0aa3d709b1d2b308.js","src/scripts/product/index.js","src/scripts/services/product.js","src/scripts/constants/api.js","src/scripts/constants/message.js","src/scripts/utilities/notification.js","node_modules/@parcel/runtime-js/lib/runtime-b0ad00aebc0500f9.js","src/scripts/utilities/sort.js","src/scripts/utilities/loader.js","src/scripts/utilities/filterRule.js","src/scripts/events/popup.js","src/scripts/template/popup.js","src/scripts/utilities/validationForm.js","src/scripts/constants/regExp.js","src/scripts/utilities/eventBus.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire09fa\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire09fa\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $5de0c965950bc2b9$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"dBDXI\",\"homePage.4d140030.js\",\"6hMtG\",\"edit.ae2dc990.svg\",\"funvN\",\"close.03f4cb75.svg\",\"3FadK\",\"ellipse.57372ae0.svg\",\"8mLDM\",\"plus.ddb5af5f.svg\",\"3AVgl\",\"check.5b6afd3d.svg\"]'));\n\n/* eslint-disable class-methods-use-this */ var $c9da2fc8fdd05716$exports = {};\n$c9da2fc8fdd05716$exports = new URL(\"edit.ae2dc990.svg\", import.meta.url).toString();\n\n\nvar $c3ca8e0a8bc4c0d3$exports = {};\n$c3ca8e0a8bc4c0d3$exports = new URL(\"close.03f4cb75.svg\", import.meta.url).toString();\n\n\nvar $9649e46aae84cf7c$exports = {};\n$9649e46aae84cf7c$exports = new URL(\"ellipse.57372ae0.svg\", import.meta.url).toString();\n\n\nvar $f033a5c7ad65c6fa$exports = {};\n$f033a5c7ad65c6fa$exports = new URL(\"plus.ddb5af5f.svg\", import.meta.url).toString();\n\n\nclass $b06f71309539d21f$var$ProductTemplate {\n    constructor(){\n        this.instance = this;\n    }\n    /**\r\n   * Singleton pattern to ensure only one instance of ProductTemplate exists.\r\n   * @returns {ProductTemplate} The instance of ProductTemplate.\r\n   */ static getInstance() {\n        if (!$b06f71309539d21f$var$ProductTemplate.instance) $b06f71309539d21f$var$ProductTemplate.instance = new $b06f71309539d21f$var$ProductTemplate();\n        return $b06f71309539d21f$var$ProductTemplate.instance;\n    }\n    /**\r\n   * Renders an HTML card for displaying a product.\r\n   * @param {Object} params - The product details for the card.\r\n   * @param {string} params.id - The ID of the product.\r\n   * @param {string} params.name - The name of the product.\r\n   * @param {string} params.imageURL - The image URL of the product.\r\n   * @param {string} params.price - The price of the product.\r\n   * @param {string} params.quantity - The quantity of the product.\r\n   * @returns {string} The HTML string for the product card.\r\n   */ static renderProductCard({ id: id, name: name, imageURL: imageURL, price: price, quantity: quantity }) {\n        return `\r\n            <div class=\"product\" data-id=\"${id}\">\r\n              <img class=\"icon product__icon js-get-warning\" src=\"${0, (/*@__PURE__*/$parcel$interopDefault($c3ca8e0a8bc4c0d3$exports))}\" id=\"${id}\"/>\r\n              <img\r\n                class=\"product__img js-get-imageURL\"\r\n                src=\"${imageURL}\"\r\n                alt=\"${name}\"\r\n              />\r\n              <div class=\"product__description\">\r\n                <h4 class=\"item js-get-name\">${name}</h4>\r\n                <p class=\"item item--thin\">\r\n                  $ \r\n                  <span class=\"js-get-price\">${price}</span>\r\n                  <img class=\"icon\" src=\"${0, (/*@__PURE__*/$parcel$interopDefault($9649e46aae84cf7c$exports))}\" />\r\n                  <span class=\"js-get-quantity\">${quantity}</span>\r\n                  Bowls\r\n                </p>\r\n              </div>\r\n              <button class=\"product__btn js-edit-product\">\r\n                <img class=\"icon\" src=\"${0, (/*@__PURE__*/$parcel$interopDefault($c9da2fc8fdd05716$exports))}\" />\r\n                Edit dish\r\n              </button>\r\n            </div>`;\n    }\n    /**\r\n   * Renders an HTML card for adding a new product.\r\n   * @returns {string} The HTML string for the addition card.\r\n   */ static renderAdditionCard() {\n        return `            \r\n            <div class=\"product product--dashed js-add-product\">\r\n              <img\r\n                class=\"icon icon--padded\"\r\n                src=\"${0, (/*@__PURE__*/$parcel$interopDefault($f033a5c7ad65c6fa$exports))}\"\r\n                alt=\"add food\"\r\n              />\r\n              <span class=\"highlight\">Add new dish</span>\r\n            </div>`;\n    }\n}\nvar $b06f71309539d21f$export$2e2bcd8739ae039 = $b06f71309539d21f$var$ProductTemplate;\n\n\n/* eslint-disable consistent-return */ /* eslint-disable consistent-return */ class $3b661f7de0c1b252$var$Api {\n    constructor(){\n        this.BASE_URL = \"https://669e22209a1bda368005842c.mockapi.io/api/v1/\";\n        this.PRODUCTS_ENDPOINT = \"products\";\n        this.instance = this;\n    }\n    static getInstance() {\n        if (!$3b661f7de0c1b252$var$Api.instance) $3b661f7de0c1b252$var$Api.instance = new $3b661f7de0c1b252$var$Api();\n        return $3b661f7de0c1b252$var$Api.instance;\n    }\n}\nvar $3b661f7de0c1b252$export$2e2bcd8739ae039 = $3b661f7de0c1b252$var$Api;\n\n\nclass $9a2c8b6aa181a461$var$Message {\n    constructor(){\n        this.instance = this;\n        this.ADD_PRODUCT_SUCCESS = \"Add product successfully\";\n        this.ADD_PRODUCT_FAILED = \"Failed to add product\";\n        this.DELETE_PRODUCT_SUCCESS = \"Delete product successfully\";\n        this.DELETE_PRODUCT_FAILED = \"Failed to delete the product\";\n        this.EDIT_PRODUCT_SUCCESS = \"Update product successfully\";\n        this.EDIT_PRODUCT_FAILED = \"Failed to update the product\";\n        this.GET_PRODUCT_FAILED = \"Failed to load products\";\n        this.NOT_FOUND = \"No Results Found\";\n        this.ERROR_NETWORK = \"Error network\";\n    }\n    static getInstance() {\n        if (!$9a2c8b6aa181a461$var$Message.instance) $9a2c8b6aa181a461$var$Message.instance = new $9a2c8b6aa181a461$var$Message();\n        return $9a2c8b6aa181a461$var$Message.instance;\n    }\n}\nvar $9a2c8b6aa181a461$export$2e2bcd8739ae039 = $9a2c8b6aa181a461$var$Message;\n\n\n/* eslint-disable class-methods-use-this */ var $d51b51a0c51c0b74$exports = {};\n$d51b51a0c51c0b74$exports = new URL(\"check.5b6afd3d.svg\", import.meta.url).toString();\n\n\n\nclass $46fd262b2b787eb4$var$Notification {\n    constructor(){\n        this.instance = this;\n    }\n    /**\r\n   * Singleton pattern to ensure only one instance of Notification exists.\r\n   * @returns {Notification} The instance of the Notification class.\r\n   */ static getInstance() {\n        if (!$46fd262b2b787eb4$var$Notification.instance) $46fd262b2b787eb4$var$Notification.instance = new $46fd262b2b787eb4$var$Notification();\n        return $46fd262b2b787eb4$var$Notification.instance;\n    }\n    /**\r\n   * Renders a notification with the provided message and status.\r\n   * @param {Object} options - The options for the notification.\r\n   * @param {string} options.status - The status of the notification ('ok' or 'error').\r\n   * @param {string} options.message - The message to display.\r\n   */ renderNotification({ status: status = \"\", message: message = \"\" }) {\n        if (message) {\n            const messageEle = document.querySelector(\".js-message\");\n            const contentMessageEle = document.querySelector(\".js-message-content\");\n            const iconEle = messageEle.querySelector(\".message__icon\");\n            // Set appropriate class and icon based on the status\n            if (status === \"ok\") {\n                messageEle.classList.add(\"message--success\");\n                messageEle.classList.remove(\"message--error\");\n                iconEle.src = (0, (/*@__PURE__*/$parcel$interopDefault($d51b51a0c51c0b74$exports)));\n                iconEle.alt = \"success\";\n            } else if (status === \"error\") {\n                messageEle.classList.add(\"message--error\");\n                messageEle.classList.remove(\"message--success\");\n                iconEle.src = (0, (/*@__PURE__*/$parcel$interopDefault($c3ca8e0a8bc4c0d3$exports)));\n                iconEle.alt = \"error\";\n            }\n            // Set the message content\n            contentMessageEle.textContent = message;\n            // Show the message and hide it after 2 seconds\n            messageEle.classList.add(\"show\");\n            setTimeout(()=>{\n                messageEle.classList.remove(\"show\");\n            }, 2000);\n        }\n    }\n}\nvar $46fd262b2b787eb4$export$2e2bcd8739ae039 = $46fd262b2b787eb4$var$Notification;\n\n\nclass $6f8d860db0522f1f$var$ProductService {\n    constructor(){\n        this.api = (0, $3b661f7de0c1b252$export$2e2bcd8739ae039).getInstance();\n        this.url = `${this.api.BASE_URL}${this.api.PRODUCTS_ENDPOINT}`;\n        this.notificationInstance = (0, $46fd262b2b787eb4$export$2e2bcd8739ae039).getInstance();\n        this.instance = this;\n    }\n    /**\r\n   * Singleton pattern to ensure only one instance of ProductService exists.\r\n   * @returns {ProductService} The instance of ProductService.\r\n   */ static getInstance() {\n        if (!$6f8d860db0522f1f$var$ProductService.instance) $6f8d860db0522f1f$var$ProductService.instance = new $6f8d860db0522f1f$var$ProductService();\n        return $6f8d860db0522f1f$var$ProductService.instance;\n    }\n    /**\r\n   * Fetches a list of products with a specified limit.\r\n   * @param {number} limit - The number of products to fetch.\r\n   * @returns {Promise<Object[]> | null} A promise that resolves to the list of products or null if an error occurs.\r\n   */ async getProduct(limit = 9) {\n        try {\n            const calledUrl = new URL(this.url);\n            calledUrl.searchParams.append(\"page\", 1);\n            calledUrl.searchParams.append(\"limit\", limit);\n            const response = await fetch(calledUrl);\n            if (!response.ok) {\n                this.notificationInstance.renderNotification({\n                    status: \"error\",\n                    message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().NOT_FOUND\n                });\n                return null;\n            }\n            return response.json();\n        } catch (error) {\n            this.notificationInstance.renderNotification({\n                status: \"error\",\n                message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().ERROR_NETWORK\n            });\n        }\n    }\n    /**\r\n   * Filters products based on a specified property and value with a limit.\r\n   * @param {string} property - The property to filter by.\r\n   * @param {string} value - The value of the property to filter by.\r\n   * @param {number} limit - The number of products to fetch.\r\n   * @returns {Promise<Object[]> | null} A promise that resolves to the filtered list of products or null if an error occurs.\r\n   */ async filterProduct(property = \"\", value = \"\", limit = 9) {\n        try {\n            const calledUrl = new URL(this.url);\n            calledUrl.searchParams.append(\"page\", 1);\n            calledUrl.searchParams.append(\"limit\", limit);\n            if (property !== \"\" && value !== \"\") calledUrl.searchParams.append(property, value);\n            const response = await fetch(calledUrl);\n            if (!response.ok) {\n                this.notificationInstance.renderNotification({\n                    status: \"error\",\n                    message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().NOT_FOUND\n                });\n                return null;\n            }\n            return response.json();\n        } catch (error) {\n            this.notificationInstance.renderNotification({\n                status: \"error\",\n                message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().ERROR_NETWORK\n            });\n        }\n    }\n    /**\r\n   * Fetches a product by its ID.\r\n   * @param {string} id - The ID of the product to fetch.\r\n   * @returns {Promise<Object | null>} A promise that resolves to the product data or null if an error occurs.\r\n   */ async getProductById(id) {\n        try {\n            const response = await fetch(`${this.url}/${id}`);\n            if (!response.ok) {\n                this.notificationInstance.renderNotification({\n                    status: \"error\",\n                    message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().NOT_FOUND\n                });\n                return null;\n            }\n            return response.json();\n        } catch (error) {\n            this.notificationInstance.renderNotification({\n                status: \"error\",\n                message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().ERROR_NETWORK\n            });\n        }\n    }\n    /**\r\n   * Adds a new product.\r\n   * @param {Object} newProduct - The new product data to be added.\r\n   * @returns {Promise<Object | null>} A promise that resolves to the added product data or null if an error occurs.\r\n   */ async addProduct(newProduct) {\n        try {\n            const response = await fetch(this.url, {\n                method: \"POST\",\n                headers: {\n                    \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify(newProduct)\n            });\n            if (!response.ok) {\n                this.notificationInstance.renderNotification({\n                    status: \"error\",\n                    message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().ADD_PRODUCT_FAILED\n                });\n                return null;\n            }\n            return response.json();\n        } catch (error) {\n            this.notificationInstance.renderNotification({\n                status: \"error\",\n                message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().ERROR_NETWORK\n            });\n        }\n    }\n    /**\r\n   * Edits an existing product.\r\n   * @param {Object} newProduct - The updated product data.\r\n   * @returns {Promise<Object | null>} A promise that resolves to the updated product data or null if an error occurs.\r\n   */ async editProduct(newProduct) {\n        try {\n            const response = await fetch(`${this.url}/${newProduct.id}`, {\n                method: \"PUT\",\n                headers: {\n                    \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify(newProduct)\n            });\n            if (!response.ok) {\n                this.notificationInstance.renderNotification({\n                    status: \"error\",\n                    message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().EDIT_PRODUCT_FAILED\n                });\n                return null;\n            }\n            return response.json();\n        } catch (error) {\n            this.notificationInstance.renderNotification({\n                status: \"error\",\n                message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().ERROR_NETWORK\n            });\n        }\n    }\n    /**\r\n   * Deletes a product by its ID.\r\n   * @param {string} id - The ID of the product to delete.\r\n   * @returns {Promise<Object | null>} A promise that resolves to the deleted product data or null if an error occurs.\r\n   */ async deleteProduct(id) {\n        try {\n            const response = await fetch(`${this.url}/${id}`, {\n                method: \"DELETE\"\n            });\n            if (!response.ok) {\n                this.notificationInstance.renderErrorNotification((0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().DELETE_PRODUCT_FAILED);\n                return null;\n            }\n            return response.json();\n        } catch (error) {\n            this.notificationInstance.renderNotification({\n                status: \"error\",\n                message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().ERROR_NETWORK\n            });\n        }\n    }\n}\nvar $6f8d860db0522f1f$export$2e2bcd8739ae039 = $6f8d860db0522f1f$var$ProductService;\n\n\n\n\nclass $516fec6e35b7be89$var$Sort {\n    constructor(){\n        this.instance = this;\n    }\n    /**\r\n   * Singleton pattern to ensure only one instance of Sort exists.\r\n   * @returns {Sort} The instance of the Sort class.\r\n   */ static getInstance() {\n        if (!$516fec6e35b7be89$var$Sort.instance) $516fec6e35b7be89$var$Sort.instance = new $516fec6e35b7be89$var$Sort();\n        return $516fec6e35b7be89$var$Sort.instance;\n    }\n    /**\r\n   * Sorts an array of objects by a specified property in ascending order.\r\n   * @param {Array<Object>} array - The array of objects to sort.\r\n   * @param {string} property - The property to sort by.\r\n   * @returns {Array<Object>} The sorted array.\r\n   */ static sortObjectsByPropertyAZ(array, property) {\n        return array.sort((a, b)=>{\n            if (a[property] > b[property]) return 1;\n            if (a[property] < b[property]) return -1;\n            return 0;\n        });\n    }\n}\nvar $516fec6e35b7be89$export$2e2bcd8739ae039 = $516fec6e35b7be89$var$Sort;\n\n\n\n/* eslint-disable class-methods-use-this */ class $85198b9b58b8fe96$var$Loader {\n    constructor(){\n        this.instance = this;\n    }\n    static getInstance() {\n        if (!$85198b9b58b8fe96$var$Loader.instance) $85198b9b58b8fe96$var$Loader.instance = new $85198b9b58b8fe96$var$Loader();\n        return $85198b9b58b8fe96$var$Loader.instance;\n    }\n    showLoader() {\n        const popupEle = document.querySelector(\".js-wrapper-popup\");\n        const loaderEle = document.createElement(\"div\");\n        popupEle.innerHTML = \"\";\n        loaderEle.classList.add(\"loader\");\n        popupEle.appendChild(loaderEle);\n        popupEle.classList.add(\"show\");\n    }\n    hideLoader() {\n        const popupEle = document.querySelector(\".js-wrapper-popup\");\n        popupEle.classList.remove(\"show\");\n        popupEle.innerHTML = \"\";\n    }\n}\nvar $85198b9b58b8fe96$export$2e2bcd8739ae039 = $85198b9b58b8fe96$var$Loader;\n\n\nclass $ac4cb0d3c80ab5b7$var$Product {\n    constructor(){\n        this.instance = this;\n        this.loaderInstance = (0, $85198b9b58b8fe96$export$2e2bcd8739ae039).getInstance();\n        this.productTemplate = (0, $b06f71309539d21f$export$2e2bcd8739ae039).getInstance();\n        this.productService = (0, $6f8d860db0522f1f$export$2e2bcd8739ae039).getInstance();\n        this.notificationInstance = (0, $46fd262b2b787eb4$export$2e2bcd8739ae039).getInstance();\n        this.products = [];\n        this.limit = 9;\n    }\n    /**\r\n   * Singleton pattern to ensure only one instance of Product exists.\r\n   * @returns {Product} The single instance of Product.\r\n   */ static getInstance() {\n        if (!$ac4cb0d3c80ab5b7$var$Product.instance) $ac4cb0d3c80ab5b7$var$Product.instance = new $ac4cb0d3c80ab5b7$var$Product();\n        return $ac4cb0d3c80ab5b7$var$Product.instance;\n    }\n    /**\r\n   * Fetches a list of products with a specified limit and reverses the order.\r\n   * @param {number} limit - The number of products to fetch.\r\n   * @returns {Promise<Object[]>} A promise that resolves to the list of products.\r\n   */ async getProduct() {\n        // Fetch products only if the products array is empty\n        if (!this.products.length) {\n            this.products = await this.productService.getProduct(this.limit);\n            if (Array.isArray(this.products) && this.products.length > 0) this.products = this.products.reverse() // Reverse the order of products\n            ;\n        }\n        return this.products;\n    }\n    /**\r\n   * Filters products based on sorting type, property, value, and limit.\r\n   * Updates the product list in the DOM.\r\n   * @param {Object} options - The filtering options.\r\n   * @param {string} options.typeOfSort - The type of sorting (AToZ or ZToA).\r\n   * @param {string} options.property - The property to filter by.\r\n   * @param {string} options.value - The value of the property to filter by.\r\n   * @param {number} options.limit - The number of products to fetch.\r\n   */ async filterProduct({ typeOfSort: typeOfSort = \"\", property: property = \"\", value: value = \"\", limit: limit = 9 }) {\n        this.loaderInstance.showLoader();\n        this.limit = limit;\n        const renderProductEle = document.querySelector(\".js-get-products\");\n        renderProductEle.innerHTML = \"\";\n        let html = (0, $b06f71309539d21f$export$2e2bcd8739ae039).renderAdditionCard();\n        // Fetch filtered products from the product service\n        this.products = await this.productService.filterProduct(property, value, limit);\n        if (Array.isArray(this.products) && this.products.length > 0) {\n            this.products = this.products.reverse() // Reverse the order of products\n            ;\n            if (typeOfSort === \"AToZ\") this.products = (0, $516fec6e35b7be89$export$2e2bcd8739ae039).sortObjectsByPropertyAZ(this.products, \"name\");\n            if (typeOfSort === \"ZToA\") this.products = (0, $516fec6e35b7be89$export$2e2bcd8739ae039).sortObjectsByPropertyAZ(this.products, \"name\").reverse();\n            // Render each product card\n            this.products.forEach((item)=>{\n                html += (0, $b06f71309539d21f$export$2e2bcd8739ae039).renderProductCard(item);\n            });\n        }\n        renderProductEle.innerHTML += html;\n        this.loaderInstance.hideLoader();\n    }\n    /**\r\n   * Fetches a product by its ID.\r\n   * @param {string} id - The ID of the product to fetch.\r\n   * @returns {Promise<Object>} A promise that resolves to the product data.\r\n   */ async getProductById(id) {\n        const currentProduct = await this.productService.getProductById(id);\n        return currentProduct;\n    }\n    /**\r\n   * Submits a new product or edits an existing product.\r\n   * @param {Object} newProduct - The product data to be submitted.\r\n   * @returns {Promise<Object>} A promise that resolves to the result of the operation.\r\n   */ async submitProduct(newProduct) {\n        let response;\n        if (newProduct.id) {\n            // Edit an existing product\n            response = await this.productService.editProduct(newProduct);\n            if (response) {\n                this.notificationInstance.renderNotification({\n                    status: \"ok\",\n                    message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().EDIT_PRODUCT_SUCCESS\n                });\n                // Update products in the products array\n                const productIndex = this.products.findIndex((product)=>product.id === newProduct.id);\n                if (productIndex !== -1) this.products[productIndex] = newProduct;\n                return {\n                    success: true,\n                    data: response\n                };\n            }\n        }\n        // Add a new product\n        response = await this.productService.addProduct(newProduct);\n        if (response) {\n            this.notificationInstance.renderNotification({\n                status: \"ok\",\n                message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().ADD_PRODUCT_SUCCESS\n            });\n            // Add the new product to the beginning of the products array\n            this.products.unshift(response);\n            return {\n                success: true,\n                data: response\n            };\n        }\n        return {\n            success: false,\n            data: response\n        };\n    }\n    /**\r\n   * Deletes a product by its ID and removes it from the product list.\r\n   * @param {string} id - The ID of the product to delete.\r\n   * @returns {Promise<Object>} A promise that resolves to the result of the operation.\r\n   */ async deleteProduct(id) {\n        const response = await this.productService.deleteProduct(id);\n        if (response) {\n            this.notificationInstance.renderNotification({\n                status: \"ok\",\n                message: (0, $9a2c8b6aa181a461$export$2e2bcd8739ae039).getInstance().DELETE_PRODUCT_SUCCESS\n            });\n            // Remove product with the given id from the products array\n            this.products = this.products.filter((product)=>product.id !== id);\n            return {\n                success: true,\n                data: response\n            };\n        }\n        return {\n            success: false,\n            data: response\n        };\n    }\n}\nvar $ac4cb0d3c80ab5b7$export$2e2bcd8739ae039 = $ac4cb0d3c80ab5b7$var$Product;\n\n\nclass $2881c4ac807560e8$var$FilterRule {\n    constructor(){\n        this.instance = this;\n        this.typeOfSort = \"\" // The type of sorting to be applied (e.g., A to Z, Z to A)\n        ;\n        this.property = \"name\" // The property to be filtered (default is 'name')\n        ;\n        this.value = \"\" // The value to filter by\n        ;\n        this.limit = 9 // The limit of items to be fetched\n        ;\n    }\n    /**\r\n   * Singleton pattern to ensure only one instance of FilterRule exists.\r\n   * @returns {FilterRule} The instance of the FilterRule class.\r\n   */ static getInstance() {\n        if (!$2881c4ac807560e8$var$FilterRule.instance) $2881c4ac807560e8$var$FilterRule.instance = new $2881c4ac807560e8$var$FilterRule();\n        return $2881c4ac807560e8$var$FilterRule.instance;\n    }\n    /**\r\n   * Sets the filter criteria for the instance.\r\n   * @param {Object} filter - The filter criteria.\r\n   * @param {string} filter.typeOfSort - The type of sorting.\r\n   * @param {string} filter.value - The value to filter by.\r\n   * @param {number} filter.limit - The limit of items to fetch.\r\n   */ setFilter({ typeOfSort: typeOfSort, value: value, limit: limit }) {\n        this.typeOfSort = typeOfSort || this.typeOfSort;\n        this.value = value;\n        this.limit = limit || this.limit;\n    }\n}\nvar $2881c4ac807560e8$export$2e2bcd8739ae039 = $2881c4ac807560e8$var$FilterRule;\n\n\n/* eslint-disable class-methods-use-this */ class $802830b606b29f94$var$PopupTemplate {\n    constructor(){\n        this.instance = this;\n    }\n    /**\r\n   * Singleton pattern to ensure only one instance of PopupTemplate exists.\r\n   * @returns {PopupTemplate} The instance of PopupTemplate.\r\n   */ static getInstance() {\n        if (!$802830b606b29f94$var$PopupTemplate.instance) $802830b606b29f94$var$PopupTemplate.instance = new $802830b606b29f94$var$PopupTemplate();\n        return $802830b606b29f94$var$PopupTemplate.instance;\n    }\n    /**\r\n   * Renders a popup HTML template for confirming a deletion action.\r\n   * @param {string} id - The ID of the item to be deleted.\r\n   * @returns {string} The HTML string for the popup.\r\n   */ static renderWarning(id) {\n        return `          \r\n          <div class=\"popup\">\r\n            <h2 class=\"popup__content\">\r\n              Are you sure you want to delete this food?\r\n            </h2>\r\n            <div class=\"popup__action\">\r\n              <button class=\"btn btn--line js-hidden-form\">Cancel</button>\r\n              <button class=\"btn btn--fill js-accept\" id=\"${id}\">Yes</button>\r\n            </div>\r\n          </div>`;\n    }\n    /**\r\n   * Renders an HTML form for creating or editing a product.\r\n   * @param {Object} params - The product details for the form.\r\n   * @param {string} [params.id=''] - The ID of the product (for editing).\r\n   * @param {string} [params.name=''] - The name of the product.\r\n   * @param {string} [params.imageURL=''] - The image URL of the product.\r\n   * @param {string} [params.price='1'] - The price of the product.\r\n   * @param {string} [params.quantity='1'] - The quantity of the product.\r\n   * @returns {string} The HTML string for the form.\r\n   */ static renderProductForm({ id: id = \"\", name: name = \"\", imageURL: imageURL = \"\", price: price = \"\", quantity: quantity = \"\" }) {\n        return `\r\n        <form action=\"\" class=\"form form--center\" id=\"js-product-form\">\r\n          <input type=\"hidden\" name=\"id\" value=\"${id}\" />\r\n          <h2 class=\"form__title\">${id !== \"\" ? \"Edit\" : \"Create a new food\"}</h2>\r\n          <label for=\"name\" class=\"form__label\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            class=\"text-field\"\r\n            value=\"${name}\"\r\n          />\r\n          <span class=\"form__error js-name-error\"></span>\r\n          <label for=\"price\" class=\"form__label\">Price</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n            class=\"text-field js-check-number\"\r\n            value=\"${price}\"\r\n          />\r\n          <span class=\"form__error js-price-error\"></span>\r\n          <label for=\"imageURL\" class=\"form__label\">Image URL</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"imageURL\"\r\n            name=\"imageURL\"\r\n            class=\"text-field js-check-imageURL\"\r\n            value=\"${imageURL}\"\r\n          />\r\n          <span class=\"form__error js-imageURL-error\"></span>\r\n          <label for=\"quantity\" class=\"form__label\">Quantity</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"quantity\"\r\n            name=\"quantity\"\r\n            class=\"text-field text-field--short js-check-number\"\r\n            value=\"${quantity}\"\r\n          />\r\n          <span class=\"form__error js-quantity-error\"></span>\r\n          <div class=\"form__action\">\r\n            <input class=\"btn btn--line js-hidden-form\" value=\"Cancel\" />\r\n            <input type=\"submit\" class=\"btn btn--fill\" value=\"Save\" />\r\n          </div>\r\n        </form>`;\n    }\n}\nvar $802830b606b29f94$export$2e2bcd8739ae039 = $802830b606b29f94$var$PopupTemplate;\n\n\nclass $7c12691eb96b2e46$var$RegExp {\n    constructor(){\n        this.instance = this;\n        this.maxLen = 100;\n        this.minLen = 2;\n        this.specialChars = /[!@#$%^&*()+\\-=[\\]{};':\"\\\\|,.<>/?]/;\n        this.alphanumeric = /^[a-zA-Z0-9\\s]*$/;\n        this.imageExtensions = [\n            \"jpg\",\n            \"jpeg\",\n            \"png\",\n            \"gif\",\n            \"bmp\"\n        ];\n        this.realNumber = /^[0-9]*\\.?[0-9]*$/;\n    }\n    static getInstance() {\n        if (!$7c12691eb96b2e46$var$RegExp.instance) $7c12691eb96b2e46$var$RegExp.instance = new $7c12691eb96b2e46$var$RegExp();\n        return $7c12691eb96b2e46$var$RegExp.instance;\n    }\n}\nvar $7c12691eb96b2e46$export$2e2bcd8739ae039 = $7c12691eb96b2e46$var$RegExp;\n\n\nclass $5064b7d3ea49d988$var$ValidationForm {\n    constructor(){\n        this.instance = this;\n    }\n    /**\r\n   * Singleton pattern to ensure only one instance of ValidationForm exists.\r\n   * @returns {ValidationForm} The instance of the ValidationForm class.\r\n   */ static getInstance() {\n        if (!$5064b7d3ea49d988$var$ValidationForm.instance) $5064b7d3ea49d988$var$ValidationForm.instance = new $5064b7d3ea49d988$var$ValidationForm();\n        return $5064b7d3ea49d988$var$ValidationForm.instance;\n    }\n    /**\r\n   * Checks if a value is not empty.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the value is empty, otherwise undefined.\r\n   */ static isNotEmpty(key, value) {\n        return !value.trim().length ? `${key} is required.` : undefined;\n    }\n    /**\r\n   * Checks if a string's length is between 2 and 100 characters.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the string length is out of range, otherwise undefined.\r\n   */ static checkLenOfString(key, value) {\n        return value.trim().length < 2 || value.trim().length > 100 ? `${key} must have between ${(0, $7c12691eb96b2e46$export$2e2bcd8739ae039).getInstance().minLen} and ${(0, $7c12691eb96b2e46$export$2e2bcd8739ae039).getInstance().maxLen} characters` : undefined;\n    }\n    /**\r\n   * Checks if a value is a valid floating-point number.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the value is not a float, otherwise undefined.\r\n   */ static isFloat(key, value) {\n        // Check if the value contains invalid characters (not a number or a dot)\n        return (0, $7c12691eb96b2e46$export$2e2bcd8739ae039).getInstance().realNumber.test(value) && (value.match(/\\./g) || []).length <= 1 ? undefined : `${key} must be a real number`;\n    }\n    /**\r\n   * Checks if a value is a valid integer.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the value is not an integer, otherwise undefined.\r\n   */ static isInteger(key, value) {\n        const numberValue = Number(value);\n        return Number.isInteger(numberValue) ? undefined : `${key} must be an integer number`;\n    }\n    /**\r\n   * Checks if a string contains at least one special character.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the value does not contain a special character, otherwise undefined.\r\n   */ static isWithSpecialChars(key, value) {\n        return (0, $7c12691eb96b2e46$export$2e2bcd8739ae039).getInstance().specialChars.test(value) ? undefined : `${key} must contain at least one special character (!@#$%^&*(),.?\":{}|<>)`;\n    }\n    /**\r\n   * Checks if a string contains only valid characters (alphanumeric and spaces).\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the value contains invalid characters, otherwise undefined.\r\n   */ static isValidString(key, value) {\n        return (0, $7c12691eb96b2e46$export$2e2bcd8739ae039).getInstance().alphanumeric.test(value) ? undefined : `${key} contains invalid characters. Only alphanumeric characters and spaces are allowed`;\n    }\n    /**\r\n   * Checks if a URL points to a valid image resource.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The URL to check.\r\n   * @returns {Promise<string|undefined>} An error message if the URL is not valid, otherwise undefined.\r\n   */ static async isValidImageUrl(key, value) {\n        // Check if the URL starts with http:// or https://\n        if (!value.startsWith(\"http://\") && !value.startsWith(\"https://\")) return `${key} must start with http:// or https://`;\n        try {\n            const response = await fetch(value, {\n                method: \"HEAD\"\n            });\n            // Check if the response hasn't 200 status\n            if (!response.ok) return `${key} does not point to a valid image resource`;\n            // Check if the Content-Type is one of the allowed image types\n            const contentType = response.headers.get(\"Content-Type\");\n            const allowedExtensions = (0, $7c12691eb96b2e46$export$2e2bcd8739ae039).getInstance().imageExtensions;\n            if (!allowedExtensions.some((ext)=>contentType.includes(ext))) return `${key} does not point to a valid image resource. Allowed types are: ${allowedExtensions.join(\", \")}`;\n            return undefined;\n        } catch (error) {\n            return `${key} does not point to a valid image resource`;\n        }\n    }\n    /**\r\n   * Validates the name field.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|false} An error message if validation fails, otherwise true.\r\n   */ static checkName(key, value) {\n        return $5064b7d3ea49d988$var$ValidationForm.isNotEmpty(key, value) || $5064b7d3ea49d988$var$ValidationForm.checkLenOfString(key, value) || $5064b7d3ea49d988$var$ValidationForm.isValidString(key, value) || false;\n    }\n    /**\r\n   * Validates the quantity field.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|false} An error message if validation fails, otherwise true.\r\n   */ static checkQuantity(key, value) {\n        return $5064b7d3ea49d988$var$ValidationForm.isNotEmpty(key, value) || $5064b7d3ea49d988$var$ValidationForm.isInteger(key, value) || false;\n    }\n    /**\r\n   * Validates the price field.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|false} An error message if validation fails, otherwise true.\r\n   */ static checkPrice(key, value) {\n        return $5064b7d3ea49d988$var$ValidationForm.isNotEmpty(key, value) || $5064b7d3ea49d988$var$ValidationForm.isFloat(key, value) || false;\n    }\n    /**\r\n   * Validates the image URL field.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|false} An error message if validation fails, otherwise true.\r\n   */ static async checkImageURL(key, value) {\n        return $5064b7d3ea49d988$var$ValidationForm.isNotEmpty(key, value) || await $5064b7d3ea49d988$var$ValidationForm.isValidImageUrl(key, value) || false;\n    }\n}\nvar $5064b7d3ea49d988$export$2e2bcd8739ae039 = $5064b7d3ea49d988$var$ValidationForm;\n\n\n\n/* eslint-disable no-constructor-return */ class $1303cc2ace2de85b$var$EventBus {\n    constructor(){\n        // Singleton pattern to ensure only one instance of EventBus exists\n        if (!$1303cc2ace2de85b$var$EventBus.instance) {\n            this.events = {} // Object to hold event listeners\n            ;\n            $1303cc2ace2de85b$var$EventBus.instance = this;\n        }\n        return $1303cc2ace2de85b$var$EventBus.instance;\n    }\n    /**\r\n   * Registers an event listener for the specified event.\r\n   * @param {string} event - The name of the event.\r\n   * @param {Function} listener - The callback function to execute when the event is emitted.\r\n   */ on(event, listener) {\n        // If the event does not exist, create an empty array for it\n        if (!this.events[event]) this.events[event] = [];\n        // Add the listener to the event's list of listeners\n        this.events[event].push(listener);\n    }\n    /**\r\n   * Emits an event, invoking all registered listeners with the provided data.\r\n   * @param {string} event - The name of the event.\r\n   * @param {any} data - The data to pass to the event listeners.\r\n   */ emit(event, data) {\n        // If the event has listeners, call each one with the provided data\n        if (this.events[event]) this.events[event].forEach((listener)=>listener(data));\n    }\n}\nvar $1303cc2ace2de85b$export$2e2bcd8739ae039 = new $1303cc2ace2de85b$var$EventBus();\n\n\n\nclass $71b286e10925f308$var$Popup {\n    constructor(currentProduct){\n        this.instance = this;\n        this.currentProduct = currentProduct;\n        this.loaderInstance = (0, $85198b9b58b8fe96$export$2e2bcd8739ae039).getInstance();\n        this.validationImageResult = undefined;\n    }\n    /**\r\n   * Singleton pattern to ensure only one instance of Popup exists.\r\n   * @param {Object} currentProduct - The current product data.\r\n   * @returns {Popup} The instance of Popup.\r\n   */ static getInstance(currentProduct = {}) {\n        if (!$71b286e10925f308$var$Popup.instance) $71b286e10925f308$var$Popup.instance = new $71b286e10925f308$var$Popup(currentProduct);\n        else $71b286e10925f308$var$Popup.instance.currentProduct = currentProduct;\n        return $71b286e10925f308$var$Popup.instance;\n    }\n    /**\r\n   * Displays the form for adding or editing a product.\r\n   */ showForm() {\n        const wrapperFormEle = document.querySelector(\".js-wrapper-popup\");\n        const formHTML = (0, $802830b606b29f94$export$2e2bcd8739ae039).renderProductForm(this.currentProduct);\n        wrapperFormEle.innerHTML = formHTML;\n        wrapperFormEle.classList.add(\"show\");\n        this.hideForm();\n        this.submitForm();\n        this.validationImage();\n        this.pressOnlyNumber();\n    }\n    /**\r\n   * Hides the form for adding or editing a product.\r\n   */ hideForm() {\n        const hiddenFormBtn = document.querySelector(\".js-hidden-form\");\n        const wrapperFormEle = document.querySelector(\".js-wrapper-popup\");\n        hiddenFormBtn.addEventListener(\"click\", (e)=>{\n            e.preventDefault();\n            wrapperFormEle.classList.remove(\"show\");\n            wrapperFormEle.innerHTML = \"\";\n        });\n    }\n    /**\r\n   * Handles the form submission for adding or editing a product.\r\n   */ submitForm() {\n        const formEle = document.getElementById(\"js-product-form\");\n        const productInstance = (0, $ac4cb0d3c80ab5b7$export$2e2bcd8739ae039).getInstance();\n        const newProduct = {};\n        formEle.addEventListener(\"submit\", async (e)=>{\n            e.preventDefault();\n            Array.from(formEle.elements).forEach((element)=>{\n                if (element && element.value !== \"Save\" && element.value !== \"Cancel\") newProduct[element.name] = element.value;\n            });\n            if (this.validationForm(newProduct) && !this.validationImageResult) {\n                const wrapperFormEle = document.querySelector(\".js-wrapper-popup\");\n                wrapperFormEle.classList.remove(\"show\");\n                this.loaderInstance.showLoader();\n                const response = await productInstance.submitProduct(newProduct);\n                this.validationImageResult = false;\n                if (response.success) (0, $1303cc2ace2de85b$export$2e2bcd8739ae039).emit(\"reloadProduct\");\n                this.loaderInstance.hideLoader();\n            }\n        });\n    }\n    pressOnlyNumber() {\n        const numInputEle = document.querySelectorAll(\".js-check-number\");\n        numInputEle.forEach((ele)=>{\n            ele.addEventListener(\"keypress\", (event)=>{\n                const { charCode: charCode } = event;\n                const currentValue = ele.value;\n                // Check if the user entered a number starting with a period\n                if (charCode === 46 && ele.selectionStart === 0) {\n                    event.preventDefault();\n                    return;\n                }\n                // Check if there is already a period and the user re-enters the period\n                if (currentValue.includes(\".\") && charCode === 46) {\n                    event.preventDefault();\n                    return;\n                }\n                // Check if not a number or a dot\n                if ((charCode < 48 || charCode > 57) && charCode !== 46) event.preventDefault();\n            });\n        });\n    }\n    /**\r\n   * Validates the image URL field when the input value changes.\r\n   * This method listens for changes in the image URL input field,\r\n   * performs validation, and updates the error message accordingly.\r\n   */ async validationImage() {\n        const imageURLEle = document.querySelector(\".js-check-imageURL\");\n        imageURLEle.addEventListener(\"change\", async (event)=>{\n            const imageURL = event.target.value;\n            const validationResult = await (0, $5064b7d3ea49d988$export$2e2bcd8739ae039).checkImageURL(\"imageURL\", imageURL);\n            const errorEle = document.querySelector(\".js-imageURL-error\");\n            if (validationResult) {\n                errorEle.textContent = validationResult;\n                errorEle.classList.add(\"show\");\n                this.validationImageResult = validationResult;\n                return;\n            }\n            errorEle.textContent = \"\";\n            errorEle.classList.remove(\"show\");\n            this.validationImageResult = false;\n        });\n    }\n    /**\r\n   * Validates the product form fields.\r\n   * @param {Object} newProduct - The product data to be validated.\r\n   * @returns {boolean} True if the form is valid, otherwise false.\r\n   */ validationForm(newProduct) {\n        let check = true;\n        const messageArr = {\n            \"name-error\": (0, $5064b7d3ea49d988$export$2e2bcd8739ae039).checkName(\"name\", newProduct.name),\n            \"price-error\": (0, $5064b7d3ea49d988$export$2e2bcd8739ae039).checkPrice(\"price\", newProduct.price),\n            \"quantity-error\": (0, $5064b7d3ea49d988$export$2e2bcd8739ae039).checkQuantity(\"quantity\", newProduct.quantity),\n            \"imageURL-error\": (0, $5064b7d3ea49d988$export$2e2bcd8739ae039).isNotEmpty(\"imageURL\", newProduct.imageURL) || this.validationImageResult || false\n        };\n        Object.keys(messageArr).forEach((key)=>{\n            const errorEle = document.querySelector(`.js-${key}`);\n            if (messageArr[key]) {\n                errorEle.classList.add(\"show\");\n                errorEle.innerHTML = messageArr[key];\n                check = false;\n                return;\n            }\n            errorEle.classList.remove(\"show\");\n        });\n        return check;\n    }\n    /**\r\n   * Displays the popup for confirming product deletion.\r\n   * @param {string} id - The ID of the product to be deleted.\r\n   * @param {number} popupTop - The top position of the popup.\r\n   */ showWarningForm(id, popupTop) {\n        const wrapperPopupEle = document.querySelector(\".js-wrapper-popup\");\n        wrapperPopupEle.innerHTML = (0, $802830b606b29f94$export$2e2bcd8739ae039).renderWarning(id);\n        wrapperPopupEle.classList.add(\"show\");\n        const popupEle = document.querySelector(\".popup\");\n        popupEle.style.marginTop = `${popupTop}px`;\n        this.hideForm();\n        this.acceptWarningForm();\n    }\n    /**\r\n   * Handles the confirmation of product deletion.\r\n   */ acceptWarningForm() {\n        const getAcceptWarningFormEle = document.querySelector(\".js-accept\");\n        const productInstance = (0, $ac4cb0d3c80ab5b7$export$2e2bcd8739ae039).getInstance();\n        getAcceptWarningFormEle.addEventListener(\"click\", async (event)=>{\n            const wrapperPopupEle = document.querySelector(\".js-wrapper-popup\");\n            wrapperPopupEle.classList.remove(\"show\");\n            this.loaderInstance.showLoader();\n            const response = await productInstance.deleteProduct(event.target.id);\n            if (response.success) (0, $1303cc2ace2de85b$export$2e2bcd8739ae039).emit(\"reloadProduct\");\n            this.loaderInstance.hideLoader();\n        });\n    }\n}\nvar $71b286e10925f308$export$2e2bcd8739ae039 = $71b286e10925f308$var$Popup;\n\n\n\n\nclass $0c9d3eec7e28d840$var$HomePage {\n    constructor(){\n        this.instance = this;\n        this.popupInstance = (0, $71b286e10925f308$export$2e2bcd8739ae039).getInstance();\n        this.loaderInstance = (0, $85198b9b58b8fe96$export$2e2bcd8739ae039).getInstance();\n        this.productInstance = (0, $ac4cb0d3c80ab5b7$export$2e2bcd8739ae039).getInstance();\n    }\n    /**\r\n   * Singleton pattern to ensure only one instance of HomePage exists.\r\n   * @returns {HomePage} The instance of HomePage.\r\n   */ static getInstance() {\n        if (!$0c9d3eec7e28d840$var$HomePage.instance) $0c9d3eec7e28d840$var$HomePage.instance = new $0c9d3eec7e28d840$var$HomePage();\n        return $0c9d3eec7e28d840$var$HomePage.instance;\n    }\n    /**\r\n   * Initializes the HomePage by rendering products, setting up event listeners, and handling functionalities.\r\n   */ async create() {\n        this.loaderInstance.showLoader();\n        await this.renderProduct();\n        this.showPopup();\n        this.dropdownToggle();\n        this.filterProduct();\n        this.getMoreProduct();\n        (0, $1303cc2ace2de85b$export$2e2bcd8739ae039).on(\"reloadProduct\", ()=>{\n            this.renderProduct();\n        });\n        this.loaderInstance.hideLoader();\n    }\n    /**\r\n   * Toggles the visibility of the dropdown menu for sorting options.\r\n   */ dropdownToggle() {\n        const toggleBtn = document.querySelector(\".js-btn-toggle\");\n        const sortOption = document.querySelector(\".js-sort-option\");\n        toggleBtn.addEventListener(\"click\", ()=>{\n            sortOption.classList.toggle(\"show\");\n        });\n    }\n    /**\r\n   * Renders the list of products on the home page.\r\n   * @param {number} [limit=9] - The number of products to render.\r\n   */ async renderProduct(limit = 9) {\n        const products = await this.productInstance.getProduct(limit);\n        const renderProductEle = document.querySelector(\".js-get-products\");\n        renderProductEle.innerHTML = \"\";\n        let html = (0, $b06f71309539d21f$export$2e2bcd8739ae039).renderAdditionCard();\n        if (Array.isArray(products) && products.length > 0) products.forEach((item)=>{\n            html += (0, $b06f71309539d21f$export$2e2bcd8739ae039).renderProductCard(item);\n        });\n        renderProductEle.innerHTML += html;\n    }\n    /**\r\n   * Filters the products based on user input and sorting options.\r\n   */ filterProduct() {\n        const inputEle = document.querySelector(\".js-filter-input\");\n        const sortOptionEle = document.querySelectorAll(\".sort-option__item\");\n        const sortOption = document.querySelector(\".js-sort-option\");\n        const productInstance = (0, $ac4cb0d3c80ab5b7$export$2e2bcd8739ae039).getInstance();\n        const ruleFilter = (0, $2881c4ac807560e8$export$2e2bcd8739ae039).getInstance();\n        inputEle.addEventListener(\"change\", async (event)=>{\n            ruleFilter.setFilter({\n                value: event.target.value\n            });\n            await productInstance.filterProduct(ruleFilter);\n        });\n        sortOptionEle.forEach((ele)=>{\n            ele.addEventListener(\"click\", async (event)=>{\n                sortOption.classList.remove(\"show\");\n                const typeOfSort = event.target.getAttribute(\"data-value\");\n                ruleFilter.setFilter({\n                    typeOfSort: typeOfSort,\n                    value: inputEle.value\n                });\n                await productInstance.filterProduct(ruleFilter);\n            });\n        });\n    }\n    /**\r\n   * Sets up event listeners for showing popup forms when user interacts with product elements.\r\n   */ showPopup() {\n        const getFormEle = document.querySelector(\".js-get-popup\");\n        getFormEle.addEventListener(\"click\", (event)=>{\n            const targetElement = event.target;\n            // TODO: Handle when the user presses the product edit button\n            if (targetElement.closest(\".js-edit-product\")) {\n                const productElement = targetElement.closest(\".product\");\n                const id = productElement.getAttribute(\"data-id\");\n                const name = productElement.querySelector(\".js-get-name\").textContent.trim();\n                const imageURL = productElement.querySelector(\".js-get-imageURL\").src.trim();\n                const price = productElement.querySelector(\".js-get-price\").textContent.trim();\n                const quantity = productElement.querySelector(\".js-get-quantity\").textContent.trim();\n                const popupInstance = new (0, $71b286e10925f308$export$2e2bcd8739ae039)({\n                    id: id,\n                    name: name,\n                    imageURL: imageURL,\n                    price: price,\n                    quantity: quantity\n                });\n                popupInstance.showForm();\n                return;\n            }\n            // TODO: Handle when the user presses the product warning button\n            if (targetElement.closest(\".js-get-warning\")) {\n                const id = targetElement.closest(\".product\").getAttribute(\"data-id\");\n                const rect = event.target.getBoundingClientRect();\n                const popupTop = rect.top + window.scrollY;\n                this.popupInstance.showWarningForm(id, popupTop);\n                return;\n            }\n            // TODO: Handle when the user presses the button to add a new product\n            if (targetElement.closest(\".js-add-product\")) this.popupInstance.showForm();\n        });\n    }\n    /**\r\n   * Loads more products when the \"show more\" button is clicked.\r\n   */ getMoreProduct() {\n        const getMoreProductEle = document.querySelector(\".js-show-more-product\");\n        const inputEle = document.querySelector(\".js-filter-input\");\n        const productInstance = (0, $ac4cb0d3c80ab5b7$export$2e2bcd8739ae039).getInstance();\n        const ruleFilter = (0, $2881c4ac807560e8$export$2e2bcd8739ae039).getInstance();\n        getMoreProductEle.addEventListener(\"click\", async (event)=>{\n            const limit = event.target.getAttribute(\"data-value\");\n            event.target.setAttribute(\"data-value\", Number(limit) + 10);\n            ruleFilter.setFilter({\n                value: inputEle.value,\n                limit: limit\n            });\n            await productInstance.filterProduct(ruleFilter);\n        });\n    }\n}\nvar $0c9d3eec7e28d840$export$2e2bcd8739ae039 = $0c9d3eec7e28d840$var$HomePage;\n\n\nclass $cba3eb2abed8e80a$var$Main {\n    constructor(){\n        this.instance = this;\n        this.homePage = (0, $0c9d3eec7e28d840$export$2e2bcd8739ae039).getInstance();\n    }\n    async init() {\n        await this.homePage.create();\n    }\n    static getInstance() {\n        if (!$cba3eb2abed8e80a$var$Main.instance) $cba3eb2abed8e80a$var$Main.instance = new $cba3eb2abed8e80a$var$Main();\n        return $cba3eb2abed8e80a$var$Main.instance;\n    }\n}\nconst $cba3eb2abed8e80a$var$main = $cba3eb2abed8e80a$var$Main.getInstance();\n$cba3eb2abed8e80a$var$main.init();\n\n\n//# sourceMappingURL=homePage.4d140030.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"dBDXI\\\",\\\"homePage.4d140030.js\\\",\\\"6hMtG\\\",\\\"edit.ae2dc990.svg\\\",\\\"funvN\\\",\\\"close.03f4cb75.svg\\\",\\\"3FadK\\\",\\\"ellipse.57372ae0.svg\\\",\\\"8mLDM\\\",\\\"plus.ddb5af5f.svg\\\",\\\"3AVgl\\\",\\\"check.5b6afd3d.svg\\\"]\"));","import HomePage from './events/home'\r\n\r\nclass Main {\r\n  constructor() {\r\n    this.instance = this\r\n    this.homePage = HomePage.getInstance()\r\n  }\r\n\r\n  async init() {\r\n    await this.homePage.create()\r\n  }\r\n\r\n  static getInstance() {\r\n    if (!Main.instance) {\r\n      Main.instance = new Main()\r\n    }\r\n    return Main.instance\r\n  }\r\n}\r\n\r\nconst main = Main.getInstance()\r\nmain.init()\r\n","/* eslint-disable class-methods-use-this */\r\nimport ProductTemplate from '../template/product'\r\nimport Product from '../product'\r\nimport RuleFilter from '../utilities/filterRule'\r\nimport Popup from './popup'\r\nimport Loader from '../utilities/loader'\r\nimport eventBus from '../utilities/eventBus'\r\n\r\nclass HomePage {\r\n  constructor() {\r\n    this.instance = this\r\n    this.popupInstance = Popup.getInstance()\r\n    this.loaderInstance = Loader.getInstance()\r\n    this.productInstance = Product.getInstance()\r\n  }\r\n\r\n  /**\r\n   * Singleton pattern to ensure only one instance of HomePage exists.\r\n   * @returns {HomePage} The instance of HomePage.\r\n   */\r\n  static getInstance() {\r\n    if (!HomePage.instance) {\r\n      HomePage.instance = new HomePage()\r\n    }\r\n    return HomePage.instance\r\n  }\r\n\r\n  /**\r\n   * Initializes the HomePage by rendering products, setting up event listeners, and handling functionalities.\r\n   */\r\n  async create() {\r\n    this.loaderInstance.showLoader()\r\n    await this.renderProduct()\r\n    this.showPopup()\r\n    this.dropdownToggle()\r\n    this.filterProduct()\r\n    this.getMoreProduct()\r\n    eventBus.on('reloadProduct', () => {\r\n      this.renderProduct()\r\n    })\r\n    this.loaderInstance.hideLoader()\r\n  }\r\n\r\n  /**\r\n   * Toggles the visibility of the dropdown menu for sorting options.\r\n   */\r\n  dropdownToggle() {\r\n    const toggleBtn = document.querySelector('.js-btn-toggle')\r\n    const sortOption = document.querySelector('.js-sort-option')\r\n\r\n    toggleBtn.addEventListener('click', () => {\r\n      sortOption.classList.toggle('show')\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Renders the list of products on the home page.\r\n   * @param {number} [limit=9] - The number of products to render.\r\n   */\r\n  async renderProduct(limit = 9) {\r\n    const products = await this.productInstance.getProduct(limit)\r\n    const renderProductEle = document.querySelector('.js-get-products')\r\n    renderProductEle.innerHTML = ''\r\n    let html = ProductTemplate.renderAdditionCard()\r\n\r\n    if (Array.isArray(products) && products.length > 0) {\r\n      products.forEach((item) => {\r\n        html += ProductTemplate.renderProductCard(item)\r\n      })\r\n    }\r\n\r\n    renderProductEle.innerHTML += html\r\n  }\r\n\r\n  /**\r\n   * Filters the products based on user input and sorting options.\r\n   */\r\n  filterProduct() {\r\n    const inputEle = document.querySelector('.js-filter-input')\r\n    const sortOptionEle = document.querySelectorAll('.sort-option__item')\r\n    const sortOption = document.querySelector('.js-sort-option')\r\n    const productInstance = Product.getInstance()\r\n    const ruleFilter = RuleFilter.getInstance()\r\n\r\n    inputEle.addEventListener('change', async (event) => {\r\n      ruleFilter.setFilter({ value: event.target.value })\r\n      await productInstance.filterProduct(ruleFilter)\r\n    })\r\n\r\n    sortOptionEle.forEach((ele) => {\r\n      ele.addEventListener('click', async (event) => {\r\n        sortOption.classList.remove('show')\r\n        const typeOfSort = event.target.getAttribute('data-value')\r\n        ruleFilter.setFilter({ typeOfSort, value: inputEle.value })\r\n        await productInstance.filterProduct(ruleFilter)\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sets up event listeners for showing popup forms when user interacts with product elements.\r\n   */\r\n  showPopup() {\r\n    const getFormEle = document.querySelector('.js-get-popup')\r\n\r\n    getFormEle.addEventListener('click', (event) => {\r\n      const targetElement = event.target\r\n\r\n      // TODO: Handle when the user presses the product edit button\r\n      if (targetElement.closest('.js-edit-product')) {\r\n        const productElement = targetElement.closest('.product')\r\n        const id = productElement.getAttribute('data-id')\r\n        const name = productElement\r\n          .querySelector('.js-get-name')\r\n          .textContent.trim()\r\n        const imageURL = productElement\r\n          .querySelector('.js-get-imageURL')\r\n          .src.trim()\r\n        const price = productElement\r\n          .querySelector('.js-get-price')\r\n          .textContent.trim()\r\n        const quantity = productElement\r\n          .querySelector('.js-get-quantity')\r\n          .textContent.trim()\r\n        const popupInstance = new Popup({\r\n          id,\r\n          name,\r\n          imageURL,\r\n          price,\r\n          quantity,\r\n        })\r\n        popupInstance.showForm()\r\n        return\r\n      }\r\n\r\n      // TODO: Handle when the user presses the product warning button\r\n      if (targetElement.closest('.js-get-warning')) {\r\n        const id = targetElement.closest('.product').getAttribute('data-id')\r\n        const rect = event.target.getBoundingClientRect()\r\n        const popupTop = rect.top + window.scrollY\r\n        this.popupInstance.showWarningForm(id, popupTop)\r\n        return\r\n      }\r\n\r\n      // TODO: Handle when the user presses the button to add a new product\r\n      if (targetElement.closest('.js-add-product')) {\r\n        this.popupInstance.showForm()\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Loads more products when the \"show more\" button is clicked.\r\n   */\r\n  getMoreProduct() {\r\n    const getMoreProductEle = document.querySelector('.js-show-more-product')\r\n    const inputEle = document.querySelector('.js-filter-input')\r\n    const productInstance = Product.getInstance()\r\n    const ruleFilter = RuleFilter.getInstance()\r\n\r\n    getMoreProductEle.addEventListener('click', async (event) => {\r\n      const limit = event.target.getAttribute('data-value')\r\n      event.target.setAttribute('data-value', Number(limit) + 10)\r\n      ruleFilter.setFilter({\r\n        value: inputEle.value,\r\n        limit,\r\n      })\r\n      await productInstance.filterProduct(ruleFilter)\r\n    })\r\n  }\r\n}\r\n\r\nexport default HomePage\r\n","import editIcon from '../../assets/icons/edit.svg'\r\nimport closeIcon from '../../assets/icons/close.svg'\r\nimport ellipseIcon from '../../assets/icons/ellipse.svg'\r\nimport plus from '../../assets/icons/plus.svg'\r\n\r\nclass ProductTemplate {\r\n  constructor() {\r\n    this.instance = this\r\n  }\r\n\r\n  /**\r\n   * Singleton pattern to ensure only one instance of ProductTemplate exists.\r\n   * @returns {ProductTemplate} The instance of ProductTemplate.\r\n   */\r\n  static getInstance() {\r\n    if (!ProductTemplate.instance) {\r\n      ProductTemplate.instance = new ProductTemplate()\r\n    }\r\n    return ProductTemplate.instance\r\n  }\r\n\r\n  /**\r\n   * Renders an HTML card for displaying a product.\r\n   * @param {Object} params - The product details for the card.\r\n   * @param {string} params.id - The ID of the product.\r\n   * @param {string} params.name - The name of the product.\r\n   * @param {string} params.imageURL - The image URL of the product.\r\n   * @param {string} params.price - The price of the product.\r\n   * @param {string} params.quantity - The quantity of the product.\r\n   * @returns {string} The HTML string for the product card.\r\n   */\r\n  static renderProductCard({ id, name, imageURL, price, quantity }) {\r\n    return `\r\n            <div class=\"product\" data-id=\"${id}\">\r\n              <img class=\"icon product__icon js-get-warning\" src=\"${closeIcon}\" id=\"${id}\"/>\r\n              <img\r\n                class=\"product__img js-get-imageURL\"\r\n                src=\"${imageURL}\"\r\n                alt=\"${name}\"\r\n              />\r\n              <div class=\"product__description\">\r\n                <h4 class=\"item js-get-name\">${name}</h4>\r\n                <p class=\"item item--thin\">\r\n                  $ \r\n                  <span class=\"js-get-price\">${price}</span>\r\n                  <img class=\"icon\" src=\"${ellipseIcon}\" />\r\n                  <span class=\"js-get-quantity\">${quantity}</span>\r\n                  Bowls\r\n                </p>\r\n              </div>\r\n              <button class=\"product__btn js-edit-product\">\r\n                <img class=\"icon\" src=\"${editIcon}\" />\r\n                Edit dish\r\n              </button>\r\n            </div>`\r\n  }\r\n\r\n  /**\r\n   * Renders an HTML card for adding a new product.\r\n   * @returns {string} The HTML string for the addition card.\r\n   */\r\n  static renderAdditionCard() {\r\n    return `            \r\n            <div class=\"product product--dashed js-add-product\">\r\n              <img\r\n                class=\"icon icon--padded\"\r\n                src=\"${plus}\"\r\n                alt=\"add food\"\r\n              />\r\n              <span class=\"highlight\">Add new dish</span>\r\n            </div>`\r\n  }\r\n}\r\n\r\nexport default ProductTemplate\r\n","module.exports = new __parcel__URL__(\"edit.ae2dc990.svg\").toString();","module.exports = new __parcel__URL__(\"close.03f4cb75.svg\").toString();","module.exports = new __parcel__URL__(\"ellipse.57372ae0.svg\").toString();","module.exports = new __parcel__URL__(\"plus.ddb5af5f.svg\").toString();","/* eslint-disable consistent-return */\r\nimport ProductService from '../services/product'\r\nimport ProductTemplate from '../template/product'\r\nimport Message from '../constants/message'\r\nimport Sort from '../utilities/sort'\r\nimport Notification from '../utilities/notification'\r\nimport Loader from '../utilities/loader'\r\n\r\nclass Product {\r\n  constructor() {\r\n    this.instance = this\r\n    this.loaderInstance = Loader.getInstance()\r\n    this.productTemplate = ProductTemplate.getInstance()\r\n    this.productService = ProductService.getInstance()\r\n    this.notificationInstance = Notification.getInstance()\r\n    this.products = []\r\n    this.limit = 9\r\n  }\r\n\r\n  /**\r\n   * Singleton pattern to ensure only one instance of Product exists.\r\n   * @returns {Product} The single instance of Product.\r\n   */\r\n  static getInstance() {\r\n    if (!Product.instance) {\r\n      Product.instance = new Product()\r\n    }\r\n    return Product.instance\r\n  }\r\n\r\n  /**\r\n   * Fetches a list of products with a specified limit and reverses the order.\r\n   * @param {number} limit - The number of products to fetch.\r\n   * @returns {Promise<Object[]>} A promise that resolves to the list of products.\r\n   */\r\n  async getProduct() {\r\n    // Fetch products only if the products array is empty\r\n    if (!this.products.length) {\r\n      this.products = await this.productService.getProduct(this.limit)\r\n      if (Array.isArray(this.products) && this.products.length > 0) {\r\n        this.products = this.products.reverse() // Reverse the order of products\r\n      }\r\n    }\r\n    return this.products\r\n  }\r\n\r\n  /**\r\n   * Filters products based on sorting type, property, value, and limit.\r\n   * Updates the product list in the DOM.\r\n   * @param {Object} options - The filtering options.\r\n   * @param {string} options.typeOfSort - The type of sorting (AToZ or ZToA).\r\n   * @param {string} options.property - The property to filter by.\r\n   * @param {string} options.value - The value of the property to filter by.\r\n   * @param {number} options.limit - The number of products to fetch.\r\n   */\r\n  async filterProduct({\r\n    typeOfSort = '',\r\n    property = '',\r\n    value = '',\r\n    limit = 9,\r\n  }) {\r\n    this.loaderInstance.showLoader()\r\n    this.limit = limit\r\n    const renderProductEle = document.querySelector('.js-get-products')\r\n    renderProductEle.innerHTML = ''\r\n    let html = ProductTemplate.renderAdditionCard()\r\n\r\n    // Fetch filtered products from the product service\r\n    this.products = await this.productService.filterProduct(\r\n      property,\r\n      value,\r\n      limit,\r\n    )\r\n    if (Array.isArray(this.products) && this.products.length > 0) {\r\n      this.products = this.products.reverse() // Reverse the order of products\r\n      if (typeOfSort === 'AToZ') {\r\n        this.products = Sort.sortObjectsByPropertyAZ(this.products, 'name')\r\n      }\r\n      if (typeOfSort === 'ZToA') {\r\n        this.products = Sort.sortObjectsByPropertyAZ(\r\n          this.products,\r\n          'name',\r\n        ).reverse()\r\n      }\r\n\r\n      // Render each product card\r\n      this.products.forEach((item) => {\r\n        html += ProductTemplate.renderProductCard(item)\r\n      })\r\n    }\r\n    renderProductEle.innerHTML += html\r\n    this.loaderInstance.hideLoader()\r\n  }\r\n\r\n  /**\r\n   * Fetches a product by its ID.\r\n   * @param {string} id - The ID of the product to fetch.\r\n   * @returns {Promise<Object>} A promise that resolves to the product data.\r\n   */\r\n  async getProductById(id) {\r\n    const currentProduct = await this.productService.getProductById(id)\r\n    return currentProduct\r\n  }\r\n\r\n  /**\r\n   * Submits a new product or edits an existing product.\r\n   * @param {Object} newProduct - The product data to be submitted.\r\n   * @returns {Promise<Object>} A promise that resolves to the result of the operation.\r\n   */\r\n  async submitProduct(newProduct) {\r\n    let response\r\n    if (newProduct.id) {\r\n      // Edit an existing product\r\n      response = await this.productService.editProduct(newProduct)\r\n      if (response) {\r\n        this.notificationInstance.renderNotification({\r\n          status: 'ok',\r\n          message: Message.getInstance().EDIT_PRODUCT_SUCCESS,\r\n        })\r\n\r\n        // Update products in the products array\r\n        const productIndex = this.products.findIndex(\r\n          (product) => product.id === newProduct.id,\r\n        )\r\n        if (productIndex !== -1) {\r\n          this.products[productIndex] = newProduct\r\n        }\r\n\r\n        return { success: true, data: response }\r\n      }\r\n    }\r\n    // Add a new product\r\n    response = await this.productService.addProduct(newProduct)\r\n    if (response) {\r\n      this.notificationInstance.renderNotification({\r\n        status: 'ok',\r\n        message: Message.getInstance().ADD_PRODUCT_SUCCESS,\r\n      })\r\n      // Add the new product to the beginning of the products array\r\n      this.products.unshift(response)\r\n\r\n      return { success: true, data: response }\r\n    }\r\n    return { success: false, data: response }\r\n  }\r\n\r\n  /**\r\n   * Deletes a product by its ID and removes it from the product list.\r\n   * @param {string} id - The ID of the product to delete.\r\n   * @returns {Promise<Object>} A promise that resolves to the result of the operation.\r\n   */\r\n  async deleteProduct(id) {\r\n    const response = await this.productService.deleteProduct(id)\r\n    if (response) {\r\n      this.notificationInstance.renderNotification({\r\n        status: 'ok',\r\n        message: Message.getInstance().DELETE_PRODUCT_SUCCESS,\r\n      })\r\n\r\n      // Remove product with the given id from the products array\r\n      this.products = this.products.filter((product) => product.id !== id)\r\n\r\n      return { success: true, data: response }\r\n    }\r\n    return { success: false, data: response }\r\n  }\r\n}\r\n\r\nexport default Product\r\n","/* eslint-disable consistent-return */\r\nimport Api from '../constants/api'\r\nimport Message from '../constants/message'\r\nimport Notification from '../utilities/notification'\r\n\r\nclass ProductService {\r\n  constructor() {\r\n    this.api = Api.getInstance()\r\n    this.url = `${this.api.BASE_URL}${this.api.PRODUCTS_ENDPOINT}`\r\n    this.notificationInstance = Notification.getInstance()\r\n    this.instance = this\r\n  }\r\n\r\n  /**\r\n   * Singleton pattern to ensure only one instance of ProductService exists.\r\n   * @returns {ProductService} The instance of ProductService.\r\n   */\r\n  static getInstance() {\r\n    if (!ProductService.instance) {\r\n      ProductService.instance = new ProductService()\r\n    }\r\n    return ProductService.instance\r\n  }\r\n\r\n  /**\r\n   * Fetches a list of products with a specified limit.\r\n   * @param {number} limit - The number of products to fetch.\r\n   * @returns {Promise<Object[]> | null} A promise that resolves to the list of products or null if an error occurs.\r\n   */\r\n  async getProduct(limit = 9) {\r\n    try {\r\n      const calledUrl = new URL(this.url)\r\n      calledUrl.searchParams.append('page', 1)\r\n      calledUrl.searchParams.append('limit', limit)\r\n      const response = await fetch(calledUrl)\r\n      if (!response.ok) {\r\n        this.notificationInstance.renderNotification({\r\n          status: 'error',\r\n          message: Message.getInstance().NOT_FOUND,\r\n        })\r\n        return null\r\n      }\r\n      return response.json()\r\n    } catch (error) {\r\n      this.notificationInstance.renderNotification({\r\n        status: 'error',\r\n        message: Message.getInstance().ERROR_NETWORK,\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Filters products based on a specified property and value with a limit.\r\n   * @param {string} property - The property to filter by.\r\n   * @param {string} value - The value of the property to filter by.\r\n   * @param {number} limit - The number of products to fetch.\r\n   * @returns {Promise<Object[]> | null} A promise that resolves to the filtered list of products or null if an error occurs.\r\n   */\r\n  async filterProduct(property = '', value = '', limit = 9) {\r\n    try {\r\n      const calledUrl = new URL(this.url)\r\n      calledUrl.searchParams.append('page', 1)\r\n      calledUrl.searchParams.append('limit', limit)\r\n      if (property !== '' && value !== '') {\r\n        calledUrl.searchParams.append(property, value)\r\n      }\r\n      const response = await fetch(calledUrl)\r\n      if (!response.ok) {\r\n        this.notificationInstance.renderNotification({\r\n          status: 'error',\r\n          message: Message.getInstance().NOT_FOUND,\r\n        })\r\n        return null\r\n      }\r\n      return response.json()\r\n    } catch (error) {\r\n      this.notificationInstance.renderNotification({\r\n        status: 'error',\r\n        message: Message.getInstance().ERROR_NETWORK,\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetches a product by its ID.\r\n   * @param {string} id - The ID of the product to fetch.\r\n   * @returns {Promise<Object | null>} A promise that resolves to the product data or null if an error occurs.\r\n   */\r\n  async getProductById(id) {\r\n    try {\r\n      const response = await fetch(`${this.url}/${id}`)\r\n      if (!response.ok) {\r\n        this.notificationInstance.renderNotification({\r\n          status: 'error',\r\n          message: Message.getInstance().NOT_FOUND,\r\n        })\r\n        return null\r\n      }\r\n      return response.json()\r\n    } catch (error) {\r\n      this.notificationInstance.renderNotification({\r\n        status: 'error',\r\n        message: Message.getInstance().ERROR_NETWORK,\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new product.\r\n   * @param {Object} newProduct - The new product data to be added.\r\n   * @returns {Promise<Object | null>} A promise that resolves to the added product data or null if an error occurs.\r\n   */\r\n  async addProduct(newProduct) {\r\n    try {\r\n      const response = await fetch(this.url, {\r\n        method: 'POST',\r\n        headers: { 'content-type': 'application/json' },\r\n        body: JSON.stringify(newProduct),\r\n      })\r\n      if (!response.ok) {\r\n        this.notificationInstance.renderNotification({\r\n          status: 'error',\r\n          message: Message.getInstance().ADD_PRODUCT_FAILED,\r\n        })\r\n        return null\r\n      }\r\n      return response.json()\r\n    } catch (error) {\r\n      this.notificationInstance.renderNotification({\r\n        status: 'error',\r\n        message: Message.getInstance().ERROR_NETWORK,\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Edits an existing product.\r\n   * @param {Object} newProduct - The updated product data.\r\n   * @returns {Promise<Object | null>} A promise that resolves to the updated product data or null if an error occurs.\r\n   */\r\n  async editProduct(newProduct) {\r\n    try {\r\n      const response = await fetch(`${this.url}/${newProduct.id}`, {\r\n        method: 'PUT',\r\n        headers: { 'content-type': 'application/json' },\r\n        body: JSON.stringify(newProduct),\r\n      })\r\n      if (!response.ok) {\r\n        this.notificationInstance.renderNotification({\r\n          status: 'error',\r\n          message: Message.getInstance().EDIT_PRODUCT_FAILED,\r\n        })\r\n        return null\r\n      }\r\n      return response.json()\r\n    } catch (error) {\r\n      this.notificationInstance.renderNotification({\r\n        status: 'error',\r\n        message: Message.getInstance().ERROR_NETWORK,\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deletes a product by its ID.\r\n   * @param {string} id - The ID of the product to delete.\r\n   * @returns {Promise<Object | null>} A promise that resolves to the deleted product data or null if an error occurs.\r\n   */\r\n  async deleteProduct(id) {\r\n    try {\r\n      const response = await fetch(`${this.url}/${id}`, {\r\n        method: 'DELETE',\r\n      })\r\n      if (!response.ok) {\r\n        this.notificationInstance.renderErrorNotification(\r\n          Message.getInstance().DELETE_PRODUCT_FAILED,\r\n        )\r\n        return null\r\n      }\r\n      return response.json()\r\n    } catch (error) {\r\n      this.notificationInstance.renderNotification({\r\n        status: 'error',\r\n        message: Message.getInstance().ERROR_NETWORK,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProductService\r\n","class Api {\r\n  constructor() {\r\n    this.BASE_URL = 'https://669e22209a1bda368005842c.mockapi.io/api/v1/'\r\n    this.PRODUCTS_ENDPOINT = 'products'\r\n    this.instance = this\r\n  }\r\n\r\n  static getInstance() {\r\n    if (!Api.instance) {\r\n      Api.instance = new Api()\r\n    }\r\n    return Api.instance\r\n  }\r\n}\r\n\r\nexport default Api\r\n","class Message {\r\n  constructor() {\r\n    this.instance = this\r\n    this.ADD_PRODUCT_SUCCESS = 'Add product successfully'\r\n    this.ADD_PRODUCT_FAILED = 'Failed to add product'\r\n    this.DELETE_PRODUCT_SUCCESS = 'Delete product successfully'\r\n    this.DELETE_PRODUCT_FAILED = 'Failed to delete the product'\r\n    this.EDIT_PRODUCT_SUCCESS = 'Update product successfully'\r\n    this.EDIT_PRODUCT_FAILED = 'Failed to update the product'\r\n    this.GET_PRODUCT_FAILED = 'Failed to load products'\r\n    this.NOT_FOUND = 'No Results Found'\r\n    this.ERROR_NETWORK = 'Error network'\r\n  }\r\n\r\n  static getInstance() {\r\n    if (!Message.instance) {\r\n      Message.instance = new Message()\r\n    }\r\n    return Message.instance\r\n  }\r\n}\r\n\r\nexport default Message\r\n","/* eslint-disable class-methods-use-this */\r\nimport checkIcon from '../../assets/icons/check.svg'\r\nimport closeIcon from '../../assets/icons/close.svg'\r\n\r\nclass Notification {\r\n  constructor() {\r\n    this.instance = this\r\n  }\r\n\r\n  /**\r\n   * Singleton pattern to ensure only one instance of Notification exists.\r\n   * @returns {Notification} The instance of the Notification class.\r\n   */\r\n  static getInstance() {\r\n    if (!Notification.instance) {\r\n      Notification.instance = new Notification()\r\n    }\r\n    return Notification.instance\r\n  }\r\n\r\n  /**\r\n   * Renders a notification with the provided message and status.\r\n   * @param {Object} options - The options for the notification.\r\n   * @param {string} options.status - The status of the notification ('ok' or 'error').\r\n   * @param {string} options.message - The message to display.\r\n   */\r\n  renderNotification({ status = '', message = '' }) {\r\n    if (message) {\r\n      const messageEle = document.querySelector('.js-message')\r\n      const contentMessageEle = document.querySelector('.js-message-content')\r\n      const iconEle = messageEle.querySelector('.message__icon')\r\n\r\n      // Set appropriate class and icon based on the status\r\n      if (status === 'ok') {\r\n        messageEle.classList.add('message--success')\r\n        messageEle.classList.remove('message--error')\r\n        iconEle.src = checkIcon\r\n        iconEle.alt = 'success'\r\n      } else if (status === 'error') {\r\n        messageEle.classList.add('message--error')\r\n        messageEle.classList.remove('message--success')\r\n        iconEle.src = closeIcon\r\n        iconEle.alt = 'error'\r\n      }\r\n\r\n      // Set the message content\r\n      contentMessageEle.textContent = message\r\n\r\n      // Show the message and hide it after 2 seconds\r\n      messageEle.classList.add('show')\r\n      setTimeout(() => {\r\n        messageEle.classList.remove('show')\r\n      }, 2000)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Notification\r\n","module.exports = new __parcel__URL__(\"check.5b6afd3d.svg\").toString();","class Sort {\r\n  constructor() {\r\n    this.instance = this\r\n  }\r\n\r\n  /**\r\n   * Singleton pattern to ensure only one instance of Sort exists.\r\n   * @returns {Sort} The instance of the Sort class.\r\n   */\r\n  static getInstance() {\r\n    if (!Sort.instance) {\r\n      Sort.instance = new Sort()\r\n    }\r\n    return Sort.instance\r\n  }\r\n\r\n  /**\r\n   * Sorts an array of objects by a specified property in ascending order.\r\n   * @param {Array<Object>} array - The array of objects to sort.\r\n   * @param {string} property - The property to sort by.\r\n   * @returns {Array<Object>} The sorted array.\r\n   */\r\n  static sortObjectsByPropertyAZ(array, property) {\r\n    return array.sort((a, b) => {\r\n      if (a[property] > b[property]) {\r\n        return 1\r\n      }\r\n      if (a[property] < b[property]) {\r\n        return -1\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n}\r\n\r\nexport default Sort\r\n","/* eslint-disable class-methods-use-this */\r\nclass Loader {\r\n  constructor() {\r\n    this.instance = this\r\n  }\r\n\r\n  static getInstance() {\r\n    if (!Loader.instance) {\r\n      Loader.instance = new Loader()\r\n    }\r\n    return Loader.instance\r\n  }\r\n\r\n  showLoader() {\r\n    const popupEle = document.querySelector('.js-wrapper-popup')\r\n    const loaderEle = document.createElement('div')\r\n    popupEle.innerHTML = ''\r\n    loaderEle.classList.add('loader')\r\n    popupEle.appendChild(loaderEle)\r\n    popupEle.classList.add('show')\r\n  }\r\n\r\n  hideLoader() {\r\n    const popupEle = document.querySelector('.js-wrapper-popup')\r\n    popupEle.classList.remove('show')\r\n    popupEle.innerHTML = ''\r\n  }\r\n}\r\n\r\nexport default Loader\r\n","class FilterRule {\r\n  constructor() {\r\n    this.instance = this\r\n    this.typeOfSort = '' // The type of sorting to be applied (e.g., A to Z, Z to A)\r\n    this.property = 'name' // The property to be filtered (default is 'name')\r\n    this.value = '' // The value to filter by\r\n    this.limit = 9 // The limit of items to be fetched\r\n  }\r\n\r\n  /**\r\n   * Singleton pattern to ensure only one instance of FilterRule exists.\r\n   * @returns {FilterRule} The instance of the FilterRule class.\r\n   */\r\n  static getInstance() {\r\n    if (!FilterRule.instance) {\r\n      FilterRule.instance = new FilterRule()\r\n    }\r\n    return FilterRule.instance\r\n  }\r\n\r\n  /**\r\n   * Sets the filter criteria for the instance.\r\n   * @param {Object} filter - The filter criteria.\r\n   * @param {string} filter.typeOfSort - The type of sorting.\r\n   * @param {string} filter.value - The value to filter by.\r\n   * @param {number} filter.limit - The limit of items to fetch.\r\n   */\r\n  setFilter({ typeOfSort, value, limit }) {\r\n    this.typeOfSort = typeOfSort || this.typeOfSort\r\n    this.value = value\r\n    this.limit = limit || this.limit\r\n  }\r\n}\r\n\r\nexport default FilterRule\r\n","/* eslint-disable class-methods-use-this */\r\nimport PopupTemplate from '../template/popup'\r\nimport ValidationForm from '../utilities/validationForm'\r\nimport Product from '../product'\r\nimport eventBus from '../utilities/eventBus'\r\nimport Loader from '../utilities/loader'\r\n\r\nclass Popup {\r\n  constructor(currentProduct) {\r\n    this.instance = this\r\n    this.currentProduct = currentProduct\r\n    this.loaderInstance = Loader.getInstance()\r\n    this.validationImageResult = undefined\r\n  }\r\n\r\n  /**\r\n   * Singleton pattern to ensure only one instance of Popup exists.\r\n   * @param {Object} currentProduct - The current product data.\r\n   * @returns {Popup} The instance of Popup.\r\n   */\r\n  static getInstance(currentProduct = {}) {\r\n    if (!Popup.instance) {\r\n      Popup.instance = new Popup(currentProduct)\r\n    } else {\r\n      Popup.instance.currentProduct = currentProduct\r\n    }\r\n    return Popup.instance\r\n  }\r\n\r\n  /**\r\n   * Displays the form for adding or editing a product.\r\n   */\r\n  showForm() {\r\n    const wrapperFormEle = document.querySelector('.js-wrapper-popup')\r\n    const formHTML = PopupTemplate.renderProductForm(this.currentProduct)\r\n    wrapperFormEle.innerHTML = formHTML\r\n    wrapperFormEle.classList.add('show')\r\n    this.hideForm()\r\n    this.submitForm()\r\n    this.validationImage()\r\n    this.pressOnlyNumber()\r\n  }\r\n\r\n  /**\r\n   * Hides the form for adding or editing a product.\r\n   */\r\n  hideForm() {\r\n    const hiddenFormBtn = document.querySelector('.js-hidden-form')\r\n    const wrapperFormEle = document.querySelector('.js-wrapper-popup')\r\n\r\n    hiddenFormBtn.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      wrapperFormEle.classList.remove('show')\r\n      wrapperFormEle.innerHTML = ''\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Handles the form submission for adding or editing a product.\r\n   */\r\n  submitForm() {\r\n    const formEle = document.getElementById('js-product-form')\r\n    const productInstance = Product.getInstance()\r\n    const newProduct = {}\r\n    formEle.addEventListener('submit', async (e) => {\r\n      e.preventDefault()\r\n      Array.from(formEle.elements).forEach((element) => {\r\n        if (element && element.value !== 'Save' && element.value !== 'Cancel') {\r\n          newProduct[element.name] = element.value\r\n        }\r\n      })\r\n      if (this.validationForm(newProduct) && !this.validationImageResult) {\r\n        const wrapperFormEle = document.querySelector('.js-wrapper-popup')\r\n        wrapperFormEle.classList.remove('show')\r\n        this.loaderInstance.showLoader()\r\n        const response = await productInstance.submitProduct(newProduct)\r\n        this.validationImageResult = false\r\n        if (response.success) {\r\n          eventBus.emit('reloadProduct')\r\n        }\r\n        this.loaderInstance.hideLoader()\r\n      }\r\n    })\r\n  }\r\n\r\n  pressOnlyNumber() {\r\n    const numInputEle = document.querySelectorAll('.js-check-number')\r\n    numInputEle.forEach((ele) => {\r\n      ele.addEventListener('keypress', (event) => {\r\n        const { charCode } = event\r\n        const currentValue = ele.value\r\n        // Check if the user entered a number starting with a period\r\n        if (charCode === 46 && ele.selectionStart === 0) {\r\n          event.preventDefault()\r\n          return\r\n        }\r\n        // Check if there is already a period and the user re-enters the period\r\n        if (currentValue.includes('.') && charCode === 46) {\r\n          event.preventDefault()\r\n          return\r\n        }\r\n        // Check if not a number or a dot\r\n        if ((charCode < 48 || charCode > 57) && charCode !== 46) {\r\n          event.preventDefault()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Validates the image URL field when the input value changes.\r\n   * This method listens for changes in the image URL input field,\r\n   * performs validation, and updates the error message accordingly.\r\n   */\r\n  async validationImage() {\r\n    const imageURLEle = document.querySelector('.js-check-imageURL')\r\n    imageURLEle.addEventListener('change', async (event) => {\r\n      const imageURL = event.target.value\r\n      const validationResult = await ValidationForm.checkImageURL(\r\n        'imageURL',\r\n        imageURL,\r\n      )\r\n      const errorEle = document.querySelector('.js-imageURL-error')\r\n\r\n      if (validationResult) {\r\n        errorEle.textContent = validationResult\r\n        errorEle.classList.add('show')\r\n        this.validationImageResult = validationResult\r\n        return\r\n      }\r\n      errorEle.textContent = ''\r\n      errorEle.classList.remove('show')\r\n      this.validationImageResult = false\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Validates the product form fields.\r\n   * @param {Object} newProduct - The product data to be validated.\r\n   * @returns {boolean} True if the form is valid, otherwise false.\r\n   */\r\n  validationForm(newProduct) {\r\n    let check = true\r\n    const messageArr = {\r\n      'name-error': ValidationForm.checkName('name', newProduct.name),\r\n      'price-error': ValidationForm.checkPrice('price', newProduct.price),\r\n      'quantity-error': ValidationForm.checkQuantity(\r\n        'quantity',\r\n        newProduct.quantity,\r\n      ),\r\n      'imageURL-error':\r\n        ValidationForm.isNotEmpty('imageURL', newProduct.imageURL) ||\r\n        this.validationImageResult ||\r\n        false,\r\n    }\r\n    Object.keys(messageArr).forEach((key) => {\r\n      const errorEle = document.querySelector(`.js-${key}`)\r\n      if (messageArr[key]) {\r\n        errorEle.classList.add('show')\r\n        errorEle.innerHTML = messageArr[key]\r\n        check = false\r\n        return\r\n      }\r\n      errorEle.classList.remove('show')\r\n    })\r\n    return check\r\n  }\r\n\r\n  /**\r\n   * Displays the popup for confirming product deletion.\r\n   * @param {string} id - The ID of the product to be deleted.\r\n   * @param {number} popupTop - The top position of the popup.\r\n   */\r\n  showWarningForm(id, popupTop) {\r\n    const wrapperPopupEle = document.querySelector('.js-wrapper-popup')\r\n    wrapperPopupEle.innerHTML = PopupTemplate.renderWarning(id)\r\n    wrapperPopupEle.classList.add('show')\r\n    const popupEle = document.querySelector('.popup')\r\n    popupEle.style.marginTop = `${popupTop}px`\r\n\r\n    this.hideForm()\r\n    this.acceptWarningForm()\r\n  }\r\n\r\n  /**\r\n   * Handles the confirmation of product deletion.\r\n   */\r\n  acceptWarningForm() {\r\n    const getAcceptWarningFormEle = document.querySelector('.js-accept')\r\n    const productInstance = Product.getInstance()\r\n\r\n    getAcceptWarningFormEle.addEventListener('click', async (event) => {\r\n      const wrapperPopupEle = document.querySelector('.js-wrapper-popup')\r\n      wrapperPopupEle.classList.remove('show')\r\n      this.loaderInstance.showLoader()\r\n      const response = await productInstance.deleteProduct(event.target.id)\r\n      if (response.success) {\r\n        eventBus.emit('reloadProduct')\r\n      }\r\n      this.loaderInstance.hideLoader()\r\n    })\r\n  }\r\n}\r\n\r\nexport default Popup\r\n","class PopupTemplate {\r\n  constructor() {\r\n    this.instance = this\r\n  }\r\n\r\n  /**\r\n   * Singleton pattern to ensure only one instance of PopupTemplate exists.\r\n   * @returns {PopupTemplate} The instance of PopupTemplate.\r\n   */\r\n  static getInstance() {\r\n    if (!PopupTemplate.instance) {\r\n      PopupTemplate.instance = new PopupTemplate()\r\n    }\r\n    return PopupTemplate.instance\r\n  }\r\n\r\n  /**\r\n   * Renders a popup HTML template for confirming a deletion action.\r\n   * @param {string} id - The ID of the item to be deleted.\r\n   * @returns {string} The HTML string for the popup.\r\n   */\r\n  static renderWarning(id) {\r\n    return `          \r\n          <div class=\"popup\">\r\n            <h2 class=\"popup__content\">\r\n              Are you sure you want to delete this food?\r\n            </h2>\r\n            <div class=\"popup__action\">\r\n              <button class=\"btn btn--line js-hidden-form\">Cancel</button>\r\n              <button class=\"btn btn--fill js-accept\" id=\"${id}\">Yes</button>\r\n            </div>\r\n          </div>`\r\n  }\r\n\r\n  /**\r\n   * Renders an HTML form for creating or editing a product.\r\n   * @param {Object} params - The product details for the form.\r\n   * @param {string} [params.id=''] - The ID of the product (for editing).\r\n   * @param {string} [params.name=''] - The name of the product.\r\n   * @param {string} [params.imageURL=''] - The image URL of the product.\r\n   * @param {string} [params.price='1'] - The price of the product.\r\n   * @param {string} [params.quantity='1'] - The quantity of the product.\r\n   * @returns {string} The HTML string for the form.\r\n   */\r\n  static renderProductForm({\r\n    id = '',\r\n    name = '',\r\n    imageURL = '',\r\n    price = '',\r\n    quantity = '',\r\n  }) {\r\n    return `\r\n        <form action=\"\" class=\"form form--center\" id=\"js-product-form\">\r\n          <input type=\"hidden\" name=\"id\" value=\"${id}\" />\r\n          <h2 class=\"form__title\">${id !== '' ? 'Edit' : 'Create a new food'}</h2>\r\n          <label for=\"name\" class=\"form__label\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            class=\"text-field\"\r\n            value=\"${name}\"\r\n          />\r\n          <span class=\"form__error js-name-error\"></span>\r\n          <label for=\"price\" class=\"form__label\">Price</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n            class=\"text-field js-check-number\"\r\n            value=\"${price}\"\r\n          />\r\n          <span class=\"form__error js-price-error\"></span>\r\n          <label for=\"imageURL\" class=\"form__label\">Image URL</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"imageURL\"\r\n            name=\"imageURL\"\r\n            class=\"text-field js-check-imageURL\"\r\n            value=\"${imageURL}\"\r\n          />\r\n          <span class=\"form__error js-imageURL-error\"></span>\r\n          <label for=\"quantity\" class=\"form__label\">Quantity</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"quantity\"\r\n            name=\"quantity\"\r\n            class=\"text-field text-field--short js-check-number\"\r\n            value=\"${quantity}\"\r\n          />\r\n          <span class=\"form__error js-quantity-error\"></span>\r\n          <div class=\"form__action\">\r\n            <input class=\"btn btn--line js-hidden-form\" value=\"Cancel\" />\r\n            <input type=\"submit\" class=\"btn btn--fill\" value=\"Save\" />\r\n          </div>\r\n        </form>`\r\n  }\r\n}\r\n\r\nexport default PopupTemplate\r\n","import RegExpClass from '../constants/regExp'\r\n\r\nclass ValidationForm {\r\n  constructor() {\r\n    this.instance = this\r\n  }\r\n\r\n  /**\r\n   * Singleton pattern to ensure only one instance of ValidationForm exists.\r\n   * @returns {ValidationForm} The instance of the ValidationForm class.\r\n   */\r\n  static getInstance() {\r\n    if (!ValidationForm.instance) {\r\n      ValidationForm.instance = new ValidationForm()\r\n    }\r\n    return ValidationForm.instance\r\n  }\r\n\r\n  /**\r\n   * Checks if a value is not empty.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the value is empty, otherwise undefined.\r\n   */\r\n  static isNotEmpty(key, value) {\r\n    return !value.trim().length ? `${key} is required.` : undefined\r\n  }\r\n\r\n  /**\r\n   * Checks if a string's length is between 2 and 100 characters.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the string length is out of range, otherwise undefined.\r\n   */\r\n  static checkLenOfString(key, value) {\r\n    return value.trim().length < 2 || value.trim().length > 100\r\n      ? `${key} must have between ${RegExpClass.getInstance().minLen} and ${RegExpClass.getInstance().maxLen} characters`\r\n      : undefined\r\n  }\r\n\r\n  /**\r\n   * Checks if a value is a valid floating-point number.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the value is not a float, otherwise undefined.\r\n   */\r\n  static isFloat(key, value) {\r\n    // Check if the value contains invalid characters (not a number or a dot)\r\n    return RegExpClass.getInstance().realNumber.test(value) &&\r\n      (value.match(/\\./g) || []).length <= 1\r\n      ? undefined\r\n      : `${key} must be a real number`\r\n  }\r\n\r\n  /**\r\n   * Checks if a value is a valid integer.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the value is not an integer, otherwise undefined.\r\n   */\r\n  static isInteger(key, value) {\r\n    const numberValue = Number(value)\r\n    return Number.isInteger(numberValue)\r\n      ? undefined\r\n      : `${key} must be an integer number`\r\n  }\r\n\r\n  /**\r\n   * Checks if a string contains at least one special character.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the value does not contain a special character, otherwise undefined.\r\n   */\r\n  static isWithSpecialChars(key, value) {\r\n    return RegExpClass.getInstance().specialChars.test(value)\r\n      ? undefined\r\n      : `${key} must contain at least one special character (!@#$%^&*(),.?\":{}|<>)`\r\n  }\r\n\r\n  /**\r\n   * Checks if a string contains only valid characters (alphanumeric and spaces).\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|undefined} An error message if the value contains invalid characters, otherwise undefined.\r\n   */\r\n  static isValidString(key, value) {\r\n    return RegExpClass.getInstance().alphanumeric.test(value)\r\n      ? undefined\r\n      : `${key} contains invalid characters. Only alphanumeric characters and spaces are allowed`\r\n  }\r\n\r\n  /**\r\n   * Checks if a URL points to a valid image resource.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The URL to check.\r\n   * @returns {Promise<string|undefined>} An error message if the URL is not valid, otherwise undefined.\r\n   */\r\n  static async isValidImageUrl(key, value) {\r\n    // Check if the URL starts with http:// or https://\r\n    if (!value.startsWith('http://') && !value.startsWith('https://')) {\r\n      return `${key} must start with http:// or https://`\r\n    }\r\n    try {\r\n      const response = await fetch(value, { method: 'HEAD' })\r\n\r\n      // Check if the response hasn't 200 status\r\n      if (!response.ok) {\r\n        return `${key} does not point to a valid image resource`\r\n      }\r\n\r\n      // Check if the Content-Type is one of the allowed image types\r\n      const contentType = response.headers.get('Content-Type')\r\n      const allowedExtensions = RegExpClass.getInstance().imageExtensions\r\n\r\n      if (!allowedExtensions.some((ext) => contentType.includes(ext))) {\r\n        return `${key} does not point to a valid image resource. Allowed types are: ${allowedExtensions.join(', ')}`\r\n      }\r\n\r\n      return undefined\r\n    } catch (error) {\r\n      return `${key} does not point to a valid image resource`\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates the name field.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|false} An error message if validation fails, otherwise true.\r\n   */\r\n  static checkName(key, value) {\r\n    return (\r\n      ValidationForm.isNotEmpty(key, value) ||\r\n      ValidationForm.checkLenOfString(key, value) ||\r\n      ValidationForm.isValidString(key, value) ||\r\n      false\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Validates the quantity field.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|false} An error message if validation fails, otherwise true.\r\n   */\r\n  static checkQuantity(key, value) {\r\n    return (\r\n      ValidationForm.isNotEmpty(key, value) ||\r\n      ValidationForm.isInteger(key, value) ||\r\n      false\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Validates the price field.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|false} An error message if validation fails, otherwise true.\r\n   */\r\n  static checkPrice(key, value) {\r\n    return (\r\n      ValidationForm.isNotEmpty(key, value) ||\r\n      ValidationForm.isFloat(key, value) ||\r\n      false\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Validates the image URL field.\r\n   * @param {string} key - The name of the field.\r\n   * @param {string} value - The value to check.\r\n   * @returns {string|false} An error message if validation fails, otherwise true.\r\n   */\r\n  static async checkImageURL(key, value) {\r\n    return (\r\n      ValidationForm.isNotEmpty(key, value) ||\r\n      (await ValidationForm.isValidImageUrl(key, value)) ||\r\n      false\r\n    )\r\n  }\r\n}\r\n\r\nexport default ValidationForm\r\n","class RegExp {\r\n  constructor() {\r\n    this.instance = this\r\n    this.maxLen = 100\r\n    this.minLen = 2\r\n    this.specialChars = /[!@#$%^&*()+\\-=[\\]{};':\"\\\\|,.<>/?]/\r\n    this.alphanumeric = /^[a-zA-Z0-9\\s]*$/\r\n    this.imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp']\r\n    this.realNumber = /^[0-9]*\\.?[0-9]*$/\r\n  }\r\n\r\n  static getInstance() {\r\n    if (!RegExp.instance) {\r\n      RegExp.instance = new RegExp()\r\n    }\r\n    return RegExp.instance\r\n  }\r\n}\r\nexport default RegExp\r\n","/* eslint-disable no-constructor-return */\r\n\r\nclass EventBus {\r\n  constructor() {\r\n    // Singleton pattern to ensure only one instance of EventBus exists\r\n    if (!EventBus.instance) {\r\n      this.events = {} // Object to hold event listeners\r\n      EventBus.instance = this\r\n    }\r\n    return EventBus.instance\r\n  }\r\n\r\n  /**\r\n   * Registers an event listener for the specified event.\r\n   * @param {string} event - The name of the event.\r\n   * @param {Function} listener - The callback function to execute when the event is emitted.\r\n   */\r\n  on(event, listener) {\r\n    // If the event does not exist, create an empty array for it\r\n    if (!this.events[event]) {\r\n      this.events[event] = []\r\n    }\r\n    // Add the listener to the event's list of listeners\r\n    this.events[event].push(listener)\r\n  }\r\n\r\n  /**\r\n   * Emits an event, invoking all registered listeners with the provided data.\r\n   * @param {string} event - The name of the event.\r\n   * @param {any} data - The data to pass to the event listeners.\r\n   */\r\n  emit(event, data) {\r\n    // If the event has listeners, call each one with the provided data\r\n    if (this.events[event]) {\r\n      this.events[event].forEach((listener) => listener(data))\r\n    }\r\n  }\r\n}\r\n\r\nexport default new EventBus()\r\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$c9da2fc8fdd05716$exports","$c3ca8e0a8bc4c0d3$exports","$9649e46aae84cf7c$exports","$f033a5c7ad65c6fa$exports","$b06f71309539d21f$var$ProductTemplate","constructor","instance","getInstance","renderProductCard","name","imageURL","price","quantity","renderAdditionCard","$3b661f7de0c1b252$var$Api","BASE_URL","PRODUCTS_ENDPOINT","$9a2c8b6aa181a461$var$Message","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILED","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAILED","EDIT_PRODUCT_SUCCESS","EDIT_PRODUCT_FAILED","GET_PRODUCT_FAILED","NOT_FOUND","ERROR_NETWORK","$d51b51a0c51c0b74$exports","$46fd262b2b787eb4$var$Notification","renderNotification","status","message","messageEle","document","querySelector","contentMessageEle","iconEle","classList","add","remove","src","alt","textContent","setTimeout","$6f8d860db0522f1f$var$ProductService","api","notificationInstance","getProduct","limit","calledUrl","searchParams","append","response","fetch","ok","json","error","filterProduct","property","value","getProductById","addProduct","newProduct","method","headers","body","stringify","editProduct","deleteProduct","renderErrorNotification","$516fec6e35b7be89$var$Sort","sortObjectsByPropertyAZ","array","sort","b","$85198b9b58b8fe96$var$Loader","showLoader","popupEle","loaderEle","createElement","innerHTML","appendChild","hideLoader","$ac4cb0d3c80ab5b7$var$Product","loaderInstance","productTemplate","productService","products","Array","isArray","reverse","typeOfSort","renderProductEle","html","forEach","item","submitProduct","productIndex","findIndex","product","success","data","unshift","filter","$2881c4ac807560e8$var$FilterRule","setFilter","$802830b606b29f94$var$PopupTemplate","renderWarning","renderProductForm","$7c12691eb96b2e46$var$RegExp","maxLen","minLen","specialChars","alphanumeric","imageExtensions","realNumber","$5064b7d3ea49d988$var$ValidationForm","isNotEmpty","key","trim","undefined","checkLenOfString","isFloat","test","match","isInteger","Number","isWithSpecialChars","isValidString","isValidImageUrl","startsWith","contentType","allowedExtensions","some","ext","includes","join","checkName","checkQuantity","checkPrice","checkImageURL","$1303cc2ace2de85b$var$EventBus","events","on","event","listener","push","emit","$1303cc2ace2de85b$export$2e2bcd8739ae039","$71b286e10925f308$var$Popup","currentProduct","validationImageResult","showForm","wrapperFormEle","formHTML","hideForm","submitForm","validationImage","pressOnlyNumber","hiddenFormBtn","addEventListener","e","preventDefault","formEle","getElementById","productInstance","from","elements","element","validationForm","numInputEle","querySelectorAll","ele","charCode","currentValue","selectionStart","imageURLEle","target","validationResult","errorEle","check","messageArr","keys","showWarningForm","popupTop","wrapperPopupEle","style","marginTop","acceptWarningForm","getAcceptWarningFormEle","$0c9d3eec7e28d840$var$HomePage","popupInstance","create","renderProduct","showPopup","dropdownToggle","getMoreProduct","toggleBtn","sortOption","toggle","inputEle","sortOptionEle","ruleFilter","getAttribute","getFormEle","targetElement","closest","productElement","rect","getBoundingClientRect","top","window","scrollY","getMoreProductEle","setAttribute","$cba3eb2abed8e80a$var$Main","homePage","$cba3eb2abed8e80a$var$main"],"version":3,"file":"homePage.4d140030.js.map"}